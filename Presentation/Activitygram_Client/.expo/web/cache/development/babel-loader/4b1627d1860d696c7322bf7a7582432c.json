{"ast":null,"code":"import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { mergeViewStyle } from \"./utils\";\nexport var BigListItemType = {\n  SPACER: \"spacer\",\n  HEADER: \"header\",\n  SECTION_HEADER: \"section_header\",\n  ITEM: \"item\",\n  SECTION_FOOTER: \"section_footer\",\n  FOOTER: \"footer\",\n  EMPTY: \"empty\"\n};\n\nvar BigListItem = function BigListItem(_ref) {\n  var uniqueKey = _ref.uniqueKey,\n      children = _ref.children,\n      style = _ref.style,\n      height = _ref.height,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width;\n  return React.createElement(View, {\n    key: uniqueKey,\n    style: mergeViewStyle(style, {\n      height: height,\n      width: width\n    })\n  }, children);\n};\n\nBigListItem.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  uniqueKey: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\nBigListItem.defaultProps = {\n  width: \"100%\"\n};\nexport default memo(BigListItem);","map":{"version":3,"sources":["BigListItem.jsx"],"names":["BigListItemType","SPACER","HEADER","SECTION_HEADER","ITEM","SECTION_FOOTER","FOOTER","EMPTY","width","mergeViewStyle","height","BigListItem","PropTypes","oneOfType","style","memo"],"mappings":"AAAA,OAAA,KAAA,IAAA,IAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;;AAGA,SAAA,cAAA;AAEA,OAAO,IAAMA,eAAe,GAAG;AAC7BC,EAAAA,MAAM,EADuB,QAAA;AAE7BC,EAAAA,MAAM,EAFuB,QAAA;AAG7BC,EAAAA,cAAc,EAHe,gBAAA;AAI7BC,EAAAA,IAAI,EAJyB,MAAA;AAK7BC,EAAAA,cAAc,EALe,gBAAA;AAM7BC,EAAAA,MAAM,EANuB,QAAA;AAO7BC,EAAAA,KAAK,EAAE;AAPsB,CAAxB;;6CAyBLC;AAAAA,MALF,SAKEA,QALF,SAKEA;AAAAA,MALmB,QAKnBA,QALmB,QAKnBA;AAAAA,MALmB,KAKnBA,QALmB,KAKnBA;AAAAA,MALmB,MAKnBA,QALmB,MAKnBA;AAAAA,wBALmB,KAKnBA;AAAAA,MALmB,KAKnBA,2BALmB,MAKnBA;AALkB,SAMd,KAAA,CAAA,aAAA,CACJ,IADI,EAEF;AAEE,IAAA,GAAK,EAAEC,SAFT;AAGIC,IAAAA,KAD2B,EAAA,cAAA,CAAA,KAAA,EAAA;AAE3BF,MAAAA,MAAAA,EAAAA,MAF2B;AAAR,MAAA,KAAA,EAAA;AAAQ,KAAA;AAF/B,GAFE,E,QAAA,CANc;AAoBI,C;;AAMtBE,WAAQE,CAAAA,SAARF,GANsB;AAOtBF,EAAAA,QAAOI,EAAAA,SAAUC,CAAVD,SAAAA,CAPe,CAQtBE,SAAOF,CAAAA,OAAPE,CAAOF,SAAqBA,CAArBA,IAAPE,CARsB,EAAxBH,SAAAA,CAAAA,IAAwB,CAOfC,CAPe;AAYtBJ,EAAAA,SAAO,EAAA,SAAA,CAAA,MAZe;AAWxBG,EAAAA,MAAAA,EAAAA,SAAAA,CAAAA,SAAAA,CAAAA,CAAAA,SAAAA,CAAAA,MAAAA,EAAAA,SAAAA,CAAAA,MAAAA,CAAAA,CAXwB;AAexB,EAAA,KAAA,EAAA,SAAA,CAAA,SAAA,CAAeI,CAAAA,SAAKJ,CAApB,MAAeI,EAAf,SAAA,CAAA,MAAeA,CAAf,CAfwB;;AAAA,CAMtBL","sourcesContent":["import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\n\nimport { mergeViewStyle } from \"./utils\";\n\nexport const BigListItemType = {\n  SPACER: \"spacer\",\n  HEADER: \"header\",\n  SECTION_HEADER: \"section_header\",\n  ITEM: \"item\",\n  SECTION_FOOTER: \"section_footer\",\n  FOOTER: \"footer\",\n  EMPTY: \"empty\",\n};\n\n/**\n * List item.\n * @param {string} uniqueKey\n * @param {React.node} children\n * @param {array|object|null|undefined} style\n * @param {number} height\n * @param {number} width\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListItem = ({\n  uniqueKey,\n  children,\n  style,\n  height,\n  width = \"100%\",\n}) => {\n  return (\n    <View\n      key={uniqueKey}\n      style={mergeViewStyle(style, {\n        height,\n        width,\n      })}\n    >\n      {children}\n    </View>\n  );\n};\n\nBigListItem.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  uniqueKey: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nBigListItem.defaultProps = {\n  width: \"100%\",\n};\n\nexport default memo(BigListItem);\n"]},"metadata":{},"sourceType":"module"}