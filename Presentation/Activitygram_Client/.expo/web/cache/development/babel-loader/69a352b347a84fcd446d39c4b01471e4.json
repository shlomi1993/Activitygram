{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useLayoutEffect, useState, useRef, useContext } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useTheme } from \"../hooks\";\nimport { Block, Image, Text, Input, Button } from \"../components\";\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport Moment from 'moment';\nimport { TextInput } from 'react-native-paper';\nimport Switch from \"../components/Switch\";\nimport Modal from \"../components/Modal\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { userContext } from \"../../App\";\nimport { useTranslation } from \"../hooks\";\nimport Toast from 'react-native-toast-message';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var baseUri = Platform.OS === 'android' ? 'http://10.0.2.2:8080/' : 'http://127.0.0.1/8080/';\n\nvar _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n\nfunction validateInputs(params) {\n  var missing = [];\n\n  if (!params['category'] || params['category'] === t('Post.SelectCategory')) {\n    missing.push(t('Post.Category'));\n  }\n\n  if (!params['title'] || params['title'] === '') {\n    missing.push(t('Post.ActivityTitle'));\n  }\n\n  if (!params['startDateTime']) {\n    missing.push(t('Post.StartDate'));\n    missing.push(t('Post.StartTime'));\n  }\n\n  if (!params['endDateTime'] || params['endDateTime'] < params['startDateTime']) {\n    params['endDateTime'] = new Date(params['startDateTime'].getTime());\n  }\n\n  if (!params['geolocation'] || params['geolocation'] === '') {\n    missing.push(t('Post.Location'));\n  }\n\n  if (!params['description'] || params['description'] === '') {\n    missing.push(t('Post.Description'));\n  }\n\n  return missing;\n}\n\nfunction sendNewActivity(params) {\n  var formBodyArray, property, encodedKey, encodedValue, formBody;\n  return _regeneratorRuntime.async(function sendNewActivity$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          formBodyArray = [];\n\n          for (property in params) {\n            encodedKey = encodeURIComponent(property);\n            encodedValue = encodeURIComponent(params[property]);\n            formBodyArray.push(encodedKey + '=' + encodedValue);\n          }\n\n          formBody = formBodyArray.join('&');\n          fetch(baseUri + 'createActivity', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n            },\n            body: formBody\n          }).then(function (res) {\n            console.log('New activity sent to', baseUri);\n          }).catch(function (err) {\n            console.log('Error: could not reach', baseUri);\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar Form = function Form() {\n  var navigation = useNavigation();\n\n  var _useTheme = useTheme(),\n      assets = _useTheme.assets,\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes,\n      gradients = _useTheme.gradients;\n\n  var initiator = useContext(userContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showCategoryModal = _useState2[0],\n      setShowCategoryModal = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categories = _useState4[0],\n      setCategories = _useState4[1];\n\n  var _useState5 = useState(t('Post.SelectCategory')),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedCategory = _useState6[0],\n      setSelectedCategory = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  var startDateFocus = useRef();\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isStartDatePickerVisible = _useState10[0],\n      setStartDatePickerVisibility = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      startDate = _useState12[0],\n      setStartDate = _useState12[1];\n\n  var startTimeFocus = useRef();\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isStartTimePickerVisible = _useState14[0],\n      setStartTimePickerVisibility = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      startTime = _useState16[0],\n      setStartTime = _useState16[1];\n\n  var _useState17 = useState(true),\n      _useState18 = _slicedToArray(_useState17, 2),\n      startTimeDisable = _useState18[0],\n      setStartTimeDisable = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      startDateError = _useState20[0],\n      setStartDateError = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      startTimeError = _useState22[0],\n      setStartTimeError = _useState22[1];\n\n  var endDateFocus = useRef();\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      isEndDatePickerVisible = _useState24[0],\n      setEndDatePickerVisibility = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      endDate = _useState26[0],\n      setEndDate = _useState26[1];\n\n  var endTimeFocus = useRef();\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      isEndTimePickerVisible = _useState28[0],\n      setEndTimePickerVisibility = _useState28[1];\n\n  var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      endTime = _useState30[0],\n      setEndTime = _useState30[1];\n\n  var _useState31 = useState(true),\n      _useState32 = _slicedToArray(_useState31, 2),\n      endTimeDisable = _useState32[0],\n      setEndTimeDisable = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      endDateError = _useState34[0],\n      setEndDateError = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      endTimeError = _useState36[0],\n      setEndTimeError = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      recurrentSwitch = _useState38[0],\n      setRecurrentSwitch = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      geolocationError = _useState40[0],\n      setGeolocationError = _useState40[1];\n\n  var _useState41 = useState(null),\n      _useState42 = _slicedToArray(_useState41, 2),\n      geolocation = _useState42[0],\n      setGeolocation = _useState42[1];\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      description = _useState44[0],\n      setDescription = _useState44[1];\n\n  var _useState45 = useState(t('Post.AddImage')),\n      _useState46 = _slicedToArray(_useState45, 2),\n      imageButtonText1 = _useState46[0],\n      setImageButtonText1 = _useState46[1];\n\n  var _useState47 = useState(t('Post.AddImage')),\n      _useState48 = _slicedToArray(_useState47, 2),\n      imageButtonText2 = _useState48[0],\n      setImageButtonText2 = _useState48[1];\n\n  var _useState49 = useState(t('Post.AddImage')),\n      _useState50 = _slicedToArray(_useState49, 2),\n      imageButtonText3 = _useState50[0],\n      setImageButtonText3 = _useState50[1];\n\n  var _useState51 = useState(null),\n      _useState52 = _slicedToArray(_useState51, 2),\n      image1 = _useState52[0],\n      setImage1 = _useState52[1];\n\n  var _useState53 = useState(null),\n      _useState54 = _slicedToArray(_useState53, 2),\n      image2 = _useState54[0],\n      setImage2 = _useState54[1];\n\n  var _useState55 = useState(null),\n      _useState56 = _slicedToArray(_useState55, 2),\n      image3 = _useState56[0],\n      setImage3 = _useState56[1];\n\n  useEffect(function () {\n    fetch(baseUri + \"allInterests\").then(function (result) {\n      return result.json();\n    }).then(function (json) {\n      return setCategories(json);\n    }).catch(function () {\n      return setCategories([]);\n    });\n  }, []);\n\n  var createDateObject = function createDateObject(date, time) {\n    try {\n      var dateArray = date.split(', ')[1].split('.');\n      var timeArray = time.split(':');\n      var sY = Number(dateArray[2]);\n      var sM = Number(dateArray[1]) - 1;\n      var sD = Number(dateArray[0]);\n      var sh = Number(timeArray[0]);\n      var sm = Number(timeArray[1]);\n      return new Date(sY, sM, sD, sh, sm);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  var handleStartDateConfirm = function handleStartDateConfirm(date) {\n    Moment.locale('en');\n\n    if (endDate) {\n      var end = createDateObject(endDate, '23:59');\n\n      if (end < date) {\n        setStartDateError(true);\n        setEndDateError(true);\n      } else {\n        setStartDateError(false);\n        setEndDateError(false);\n        setStartTimeDisable(false);\n      }\n    } else {\n      setStartTimeDisable(false);\n    }\n\n    var newText = Moment(date).format('ddd, D.M.YYYY');\n    setStartDate(newText);\n    setStartDatePickerVisibility(false);\n  };\n\n  var handleStartTimeConfirm = function handleStartTimeConfirm(time) {\n    Moment.locale('en');\n    var newText = Moment(time).format('HH:mm');\n\n    if (endTime) {\n      var end = createDateObject(endDate, endTime);\n      var start = createDateObject(startDate, newText);\n\n      if (end < start) {\n        setStartTimeError(true);\n        setEndTimeError(true);\n      } else {\n        setStartTimeError(false);\n        setEndTimeError(false);\n      }\n    }\n\n    setStartTime(newText);\n    setStartTimePickerVisibility(false);\n  };\n\n  var handleEndDateConfirm = function handleEndDateConfirm(date) {\n    if (startDate) {\n      var start = createDateObject(startDate, '00:00');\n\n      if (start > date) {\n        setStartDateError(true);\n        setEndDateError(true);\n      } else {\n        setStartDateError(false);\n        setEndDateError(false);\n        setEndTimeDisable(false);\n      }\n    } else {\n      setEndTimeDisable(false);\n    }\n\n    Moment.locale('en');\n    var newText = Moment(date).format('ddd, D.M.YYYY');\n    setEndDate(newText);\n    setEndDatePickerVisibility(false);\n  };\n\n  var handleEndTimeConfirm = function handleEndTimeConfirm(time) {\n    Moment.locale('en');\n    var newText = Moment(time).format('HH:mm');\n\n    if (startTime) {\n      var end = createDateObject(endDate, newText);\n      var start = createDateObject(startDate, endTime);\n\n      if (end < start) {\n        setStartTimeError(true);\n        setEndTimeError(true);\n      } else {\n        setStartTimeError(false);\n        setEndTimeError(false);\n      }\n    }\n\n    setEndTime(newText);\n    setEndTimePickerVisibility(false);\n  };\n\n  function geocode(address) {\n    var res, json;\n    return _regeneratorRuntime.async(function geocode$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(baseUri + (\"geocode?address=\" + address)));\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            json = _context2.sent;\n            setGeolocationError(false);\n            setGeolocation({\n              'address': address,\n              'latitude': json.latitude,\n              'longitude': json.longitude\n            });\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            setGeolocation('unknown');\n            setGeolocationError(true);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  }\n\n  var chooseImage = function chooseImage(imageNumber) {\n    ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      base64: true,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 0.5\n    }).then(function (data) {\n      if (!data.cancelled) {\n        if (imageNumber == 1) {\n          setImage1(data);\n          setImageButtonText1(t('Post.Change'));\n        } else if (imageNumber == 2) {\n          setImage2(data);\n          setImageButtonText2(t('Post.Change'));\n        } else if (imageNumber == 3) {\n          setImage3(data);\n          setImageButtonText3(t('Post.Change'));\n        }\n      }\n    });\n  };\n\n  var removeImage = function removeImage(imageNumber) {\n    if (imageNumber == 1) {\n      setImage1(null);\n      setImageButtonText1(t('Post.AddImage'));\n    } else if (imageNumber == 2) {\n      setImage2(null);\n      setImageButtonText2(t('Post.AddImage'));\n    } else if (imageNumber == 3) {\n      setImage3(null);\n      setImageButtonText3(t('Post.AddImage'));\n    }\n  };\n\n  var create = function create() {\n    return function () {\n      var images = [];\n      if (image1) images.push(image1['base64']);\n      if (image2) images.push(image2['base64']);\n      if (image3) images.push(image3['base64']);\n      var params = {\n        initiator: initiator.uid,\n        category: selectedCategory,\n        title: title,\n        startDateTime: createDateObject(startDate, startTime),\n        endDateTime: createDateObject(endDate, endTime),\n        recurrent: recurrentSwitch.toString(),\n        geolocation: geolocation.toString(),\n        description: description,\n        imagesBase64: images,\n        managers: [initiator.uid],\n        participants: [initiator.uid],\n        status: 'open'\n      };\n      var missing = validateInputs(params);\n\n      if (missing.length === 0) {\n        sendNewActivity(params);\n        navigation.navigate('PostSuccess');\n      } else {\n        Toast.show({\n          type: 'error',\n          text1: t('Post.TryAgain'),\n          text2: missing.join(', ')\n        });\n      }\n    };\n  };\n\n  return _jsxs(Block, {\n    color: colors.card,\n    paddingTop: sizes.m,\n    paddingHorizontal: sizes.padding,\n    children: [_jsx(Text, {\n      p: true,\n      semibold: true,\n      marginBottom: sizes.sm,\n      children: t('Post.PleaseFill')\n    }), _jsxs(Block, {\n      children: [_jsx(Block, {\n        marginBottom: sizes.sm,\n        children: _jsx(Input, {\n          value: initiator.uid,\n          editable: false,\n          disabled: true\n        })\n      }), _jsxs(Block, {\n        marginBottom: sizes.sm,\n        marginTop: sizes.xs,\n        children: [_jsx(Button, {\n          row: true,\n          gradient: gradients.dark,\n          onPress: function onPress() {\n            return setShowCategoryModal(true);\n          },\n          children: _jsxs(Block, {\n            row: true,\n            align: \"center\",\n            justify: \"space-between\",\n            paddingHorizontal: sizes.sm,\n            children: [_jsx(Text, {\n              white: true,\n              bold: true,\n              marginRight: sizes.sm,\n              children: selectedCategory\n            }), _jsx(Image, {\n              source: assets.arrow,\n              color: colors.white,\n              transform: [{\n                rotate: '90deg'\n              }]\n            })]\n          })\n        }), _jsx(Modal, {\n          visible: showCategoryModal,\n          onRequestClose: function onRequestClose() {\n            return setShowCategoryModal(false);\n          },\n          children: _jsx(FlatList, {\n            keyExtractor: function keyExtractor(index) {\n              return \"\" + index;\n            },\n            data: categories,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsx(Button, {\n                marginBottom: sizes.sm,\n                onPress: function onPress() {\n                  setSelectedCategory(item);\n                  setShowCategoryModal(false);\n                },\n                children: _jsx(Text, {\n                  p: true,\n                  white: true,\n                  semibold: true,\n                  transform: \"uppercase\",\n                  children: item\n                })\n              });\n            }\n          })\n        })]\n      }), _jsx(Block, {\n        marginBottom: sizes.sm,\n        children: _jsx(TextInput, {\n          label: t('Post.ActivityTitle'),\n          mode: \"outlined\",\n          autoComplete: false,\n          activeOutlineColor: colors.info,\n          onChangeText: function onChangeText(newText) {\n            setTitle(newText);\n          }\n        })\n      }), _jsxs(Block, {\n        row: true,\n        marginBottom: sizes.sm,\n        children: [_jsx(Block, {\n          marginRight: sizes.sm / 2,\n          children: _jsx(TextInput, {\n            label: t('Post.StartDate'),\n            mode: \"outlined\",\n            value: startDate,\n            error: startDateError,\n            autoComplete: false,\n            showSoftInputOnFocus: false,\n            ref: startDateFocus,\n            activeOutlineColor: colors.info,\n            onFocus: function onFocus() {\n              setStartDatePickerVisibility(true);\n              startDateFocus.current.blur();\n            }\n          })\n        }), _jsx(Block, {\n          marginLeft: sizes.sm / 2,\n          children: _jsx(TextInput, {\n            label: t('Post.StartTime'),\n            mode: \"outlined\",\n            value: startTime,\n            error: startTimeError,\n            autoComplete: false,\n            showSoftInputOnFocus: false,\n            ref: startTimeFocus,\n            disabled: startTimeDisable,\n            activeOutlineColor: colors.info,\n            onFocus: function onFocus() {\n              setStartTimePickerVisibility(true);\n              startTimeFocus.current.blur();\n            }\n          })\n        }), _jsx(DateTimePickerModal, {\n          isVisible: isStartDatePickerVisible,\n          mode: \"date\",\n          onConfirm: handleStartDateConfirm,\n          onCancel: function onCancel() {\n            return setStartDatePickerVisibility(false);\n          }\n        }), _jsx(DateTimePickerModal, {\n          isVisible: isStartTimePickerVisible,\n          mode: \"time\",\n          onConfirm: handleStartTimeConfirm,\n          onCancel: function onCancel() {\n            return setStartTimePickerVisibility(false);\n          }\n        })]\n      }), _jsxs(Block, {\n        row: true,\n        marginBottom: sizes.sm,\n        children: [_jsx(Block, {\n          marginRight: sizes.sm / 2,\n          children: _jsx(TextInput, {\n            label: t('Post.EndDate'),\n            mode: \"outlined\",\n            value: endDate,\n            error: endDateError,\n            autoComplete: false,\n            showSoftInputOnFocus: false,\n            ref: endDateFocus,\n            activeOutlineColor: colors.info,\n            onFocus: function onFocus() {\n              setEndDatePickerVisibility(true);\n              endDateFocus.current.blur();\n            }\n          })\n        }), _jsx(Block, {\n          marginLeft: sizes.sm / 2,\n          children: _jsx(TextInput, {\n            label: t('Post.EndTime'),\n            mode: \"outlined\",\n            value: endTime,\n            error: endTimeError,\n            autoComplete: false,\n            showSoftInputOnFocus: false,\n            ref: endTimeFocus,\n            disabled: endTimeDisable,\n            activeOutlineColor: colors.info,\n            onFocus: function onFocus() {\n              setEndTimePickerVisibility(true);\n              endTimeFocus.current.blur();\n            }\n          })\n        }), _jsx(DateTimePickerModal, {\n          isVisible: isEndDatePickerVisible,\n          mode: \"date\",\n          onConfirm: handleEndDateConfirm,\n          onCancel: function onCancel() {\n            return setEndDatePickerVisibility(false);\n          }\n        }), _jsx(DateTimePickerModal, {\n          isVisible: isEndTimePickerVisible,\n          mode: \"time\",\n          onConfirm: handleEndTimeConfirm,\n          onCancel: function onCancel() {\n            return setEndTimePickerVisibility(false);\n          }\n        })]\n      }), _jsxs(Block, {\n        row: true,\n        flex: 0,\n        align: \"center\",\n        justify: \"space-between\",\n        marginBottom: sizes.s,\n        children: [_jsx(Text, {\n          children: t('Post.Recurrent')\n        }), _jsxs(Block, {\n          row: true,\n          flex: 0,\n          children: [_jsx(Text, {\n            children: recurrentSwitch ? t('Post.RecurrentYes') : t('Post.RecurrentNo')\n          }), _jsx(Switch, {\n            checked: recurrentSwitch,\n            onPress: function onPress(checked) {\n              return setRecurrentSwitch(checked);\n            }\n          })]\n        })]\n      }), _jsx(Block, {\n        marginBottom: sizes.sm,\n        children: _jsx(TextInput, {\n          label: t('Post.Location'),\n          mode: \"outlined\",\n          error: geolocationError,\n          autoComplete: false,\n          activeOutlineColor: colors.info,\n          onChangeText: function onChangeText(newText) {\n            geocode(newText);\n          }\n        })\n      }), _jsx(Block, {\n        marginBottom: sizes.sm,\n        children: _jsx(TextInput, {\n          label: t('Post.Description'),\n          mode: \"outlined\",\n          autoComplete: false,\n          multiline: true,\n          numberOfLines: 7,\n          activeOutlineColor: colors.info,\n          onChangeText: function onChangeText(newText) {\n            setDescription(newText);\n          }\n        })\n      }), _jsxs(Block, {\n        row: true,\n        marginBottom: sizes.s,\n        align: \"center\",\n        children: [_jsx(Block, {\n          children: image1 && _jsx(Block, {\n            align: \"flex-start\",\n            marginRight: sizes.xs,\n            children: _jsx(Image, {\n              source: {\n                uri: image1.uri\n              },\n              style: {\n                width: 100,\n                height: 100,\n                borderColor: 'black',\n                borderWidth: 1\n              }\n            })\n          })\n        }), _jsx(Block, {\n          children: image2 && _jsx(Block, {\n            align: \"center\",\n            marginHorizontal: sizes.xs,\n            children: _jsx(Image, {\n              source: {\n                uri: image2.uri\n              },\n              style: {\n                width: 100,\n                height: 100,\n                borderColor: 'black',\n                borderWidth: 1\n              }\n            })\n          })\n        }), _jsx(Block, {\n          children: image3 && _jsx(Block, {\n            align: \"flex-end\",\n            marginLeft: sizes.xs,\n            children: _jsx(Image, {\n              source: {\n                uri: image3.uri\n              },\n              style: {\n                width: 100,\n                height: 100,\n                borderColor: 'black',\n                borderWidth: 1\n              }\n            })\n          })\n        })]\n      }), _jsxs(Block, {\n        row: true,\n        marginBottom: sizes.sm,\n        children: [_jsx(Block, {\n          marginRight: sizes.xs,\n          children: _jsx(Button, {\n            flex: 1,\n            gradient: gradients.dark,\n            onPress: function onPress() {\n              return chooseImage(1);\n            },\n            onLongPress: function onLongPress() {\n              return removeImage(1);\n            },\n            children: _jsx(Text, {\n              white: true,\n              bold: true,\n              children: imageButtonText1\n            })\n          })\n        }), _jsx(Block, {\n          marginHorizontal: sizes.xs,\n          children: _jsx(Button, {\n            flex: 1,\n            gradient: gradients.dark,\n            onPress: function onPress() {\n              return chooseImage(2);\n            },\n            onLongPress: function onLongPress() {\n              return removeImage(2);\n            },\n            children: _jsx(Text, {\n              white: true,\n              bold: true,\n              children: imageButtonText2\n            })\n          })\n        }), _jsx(Block, {\n          marginLeft: sizes.xs,\n          children: _jsx(Button, {\n            flex: 1,\n            gradient: gradients.dark,\n            onPress: function onPress() {\n              return chooseImage(3);\n            },\n            onLongPress: function onLongPress() {\n              return removeImage(3);\n            },\n            children: _jsx(Text, {\n              white: true,\n              bold: true,\n              children: imageButtonText3\n            })\n          })\n        })]\n      })]\n    }), _jsxs(Block, {\n      children: [_jsx(Block, {\n        children: _jsx(Button, {\n          flex: 1,\n          gradient: gradients.primary,\n          marginBottom: sizes.base,\n          onPress: create,\n          children: _jsx(Text, {\n            white: true,\n            bold: true,\n            transform: \"uppercase\",\n            children: t('Post.Create')\n          })\n        })\n      }), _jsx(Toast, {\n        position: \"bottom\",\n        bottomOffset: 80,\n        onPress: function onPress() {\n          return Toast.hide();\n        }\n      })]\n    })]\n  });\n};\n\nvar Post = function Post() {\n  var _useTheme2 = useTheme(),\n      assets = _useTheme2.assets,\n      sizes = _useTheme2.sizes;\n\n  var navigation = useNavigation();\n  var headerHeight = useHeaderHeight();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackground: function headerBackground() {\n        return _jsx(Image, {\n          radius: 0,\n          resizeMode: \"cover\",\n          width: sizes.width,\n          height: headerHeight,\n          source: assets.background\n        });\n      }\n    });\n  }, [assets.background, navigation, sizes.width, headerHeight]);\n  return _jsx(Block, {\n    safe: true,\n    children: _jsx(Block, {\n      scroll: true,\n      children: _jsx(Form, {})\n    })\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/screens/Post.tsx"],"names":["React","useEffect","useLayoutEffect","useState","useRef","useContext","useNavigation","useHeaderHeight","useTheme","Block","Image","Text","Input","Button","DateTimePickerModal","Moment","TextInput","Switch","Modal","ImagePicker","userContext","useTranslation","Toast","baseUri","Platform","OS","t","validateInputs","params","missing","push","Date","getTime","sendNewActivity","formBodyArray","property","encodedKey","encodeURIComponent","encodedValue","formBody","join","fetch","method","headers","body","then","res","console","log","catch","err","Form","navigation","assets","colors","sizes","gradients","initiator","showCategoryModal","setShowCategoryModal","categories","setCategories","selectedCategory","setSelectedCategory","title","setTitle","startDateFocus","isStartDatePickerVisible","setStartDatePickerVisibility","startDate","setStartDate","startTimeFocus","isStartTimePickerVisible","setStartTimePickerVisibility","startTime","setStartTime","startTimeDisable","setStartTimeDisable","startDateError","setStartDateError","startTimeError","setStartTimeError","endDateFocus","isEndDatePickerVisible","setEndDatePickerVisibility","endDate","setEndDate","endTimeFocus","isEndTimePickerVisible","setEndTimePickerVisibility","endTime","setEndTime","endTimeDisable","setEndTimeDisable","endDateError","setEndDateError","endTimeError","setEndTimeError","recurrentSwitch","setRecurrentSwitch","geolocationError","setGeolocationError","geolocation","setGeolocation","description","setDescription","imageButtonText1","setImageButtonText1","imageButtonText2","setImageButtonText2","imageButtonText3","setImageButtonText3","image1","setImage1","image2","setImage2","image3","setImage3","result","json","createDateObject","date","time","dateArray","split","timeArray","sY","Number","sM","sD","sh","sm","e","handleStartDateConfirm","locale","end","newText","format","handleStartTimeConfirm","start","handleEndDateConfirm","handleEndTimeConfirm","geocode","address","latitude","longitude","chooseImage","imageNumber","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","base64","allowsEditing","aspect","quality","data","cancelled","removeImage","create","images","uid","category","startDateTime","endDateTime","recurrent","toString","imagesBase64","managers","participants","status","length","navigate","show","type","text1","text2","card","m","padding","xs","dark","arrow","white","rotate","index","item","info","current","blur","s","checked","uri","width","height","borderColor","borderWidth","primary","base","hide","Post","headerHeight","setOptions","headerBackground","background"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState, useRef, useContext } from 'react';\r\nimport { Platform, FlatList } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useHeaderHeight } from '@react-navigation/stack';\r\nimport { useTheme } from '../hooks';\r\nimport { Block, Image, Text, Input, Button } from '../components';\r\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\r\nimport Moment from 'moment';\r\nimport { TextInput } from 'react-native-paper';\r\nimport Switch from '../components/Switch'\r\nimport Modal from '../components/Modal';\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport { userContext } from '../../App'\r\nimport { useTranslation } from '../hooks';\r\nimport Toast from 'react-native-toast-message'\r\n\r\nexport const baseUri = Platform.OS === 'android' ? 'http://10.0.2.2:8080/' : 'http://127.0.0.1/8080/';\r\nconst { t } = useTranslation();\r\n\r\nfunction validateInputs(params: object) {\r\n  let missing = []\r\n  if (!params['category'] || params['category'] === t('Post.SelectCategory')) {\r\n    missing.push(t('Post.Category'));\r\n  }\r\n  if (!params['title'] || params['title'] === '') {\r\n    missing.push(t('Post.ActivityTitle'));\r\n  }\r\n  if (!params['startDateTime']) {\r\n    missing.push(t('Post.StartDate'));\r\n    missing.push(t('Post.StartTime'));\r\n  }\r\n  if (!params['endDateTime'] || params['endDateTime'] < params['startDateTime']) {\r\n    params['endDateTime'] = new Date(params['startDateTime'].getTime());\r\n  }\r\n  if (!params['geolocation'] || params['geolocation'] === '') {\r\n    missing.push(t('Post.Location'));\r\n  }\r\n  if (!params['description'] || params['description'] === '') {\r\n    missing.push(t('Post.Description'));\r\n  }\r\n  // Insert here more tests...\r\n  return missing\r\n}\r\n\r\nasync function sendNewActivity(params: object) {\r\n  let formBodyArray = [];\r\n  for (var property in params) {\r\n    var encodedKey = encodeURIComponent(property);\r\n    var encodedValue = encodeURIComponent(params[property]);\r\n    formBodyArray.push(encodedKey + '=' + encodedValue);\r\n  }\r\n  let formBody = formBodyArray.join('&');\r\n  fetch(baseUri + 'createActivity', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },\r\n    body: formBody\r\n  })\r\n    .then((res) => {\r\n      console.log('New activity sent to', baseUri);\r\n    })\r\n    .catch((err) => {\r\n      console.log('Error: could not reach', baseUri);\r\n    });\r\n}\r\n\r\nconst Form = () => {\r\n\r\n  // Theme & Context\r\n  const navigation = useNavigation();\r\n  const { assets, colors, sizes, gradients } = useTheme();\r\n  const initiator = useContext(userContext)\r\n\r\n  // Category Modal\r\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(t('Post.SelectCategory'));\r\n\r\n  // Title\r\n  const [title, setTitle] = useState('')\r\n\r\n  // Start Date and Time\r\n  const startDateFocus = useRef();\r\n  const [isStartDatePickerVisible, setStartDatePickerVisibility] = useState(false);\r\n  const [startDate, setStartDate] = useState('')\r\n  const startTimeFocus = useRef();\r\n  const [isStartTimePickerVisible, setStartTimePickerVisibility] = useState(false);\r\n  const [startTime, setStartTime] = useState('')\r\n  const [startTimeDisable, setStartTimeDisable] = useState(true)\r\n  const [startDateError, setStartDateError] = useState(false)\r\n  const [startTimeError, setStartTimeError] = useState(false)\r\n\r\n  // End Date and Time\r\n  const endDateFocus = useRef();\r\n  const [isEndDatePickerVisible, setEndDatePickerVisibility] = useState(false);\r\n  const [endDate, setEndDate] = useState('')\r\n  const endTimeFocus = useRef();\r\n  const [isEndTimePickerVisible, setEndTimePickerVisibility] = useState(false);\r\n  const [endTime, setEndTime] = useState('')\r\n  const [endTimeDisable, setEndTimeDisable] = useState(true)\r\n  const [endDateError, setEndDateError] = useState(false)\r\n  const [endTimeError, setEndTimeError] = useState(false)\r\n\r\n  // Recurrent\r\n  const [recurrentSwitch, setRecurrentSwitch] = useState(false);\r\n\r\n  // Location\r\n  const [geolocationError, setGeolocationError] = useState(false);\r\n  const [geolocation, setGeolocation] = useState(null);\r\n\r\n  // Description\r\n  const [description, setDescription] = useState('');\r\n\r\n  // Images\r\n  const [imageButtonText1, setImageButtonText1] = useState(t('Post.AddImage'));\r\n  const [imageButtonText2, setImageButtonText2] = useState(t('Post.AddImage'));\r\n  const [imageButtonText3, setImageButtonText3] = useState(t('Post.AddImage'));\r\n  const [image1, setImage1] = useState(null);\r\n  const [image2, setImage2] = useState(null);\r\n  const [image3, setImage3] = useState(null);\r\n\r\n  // Fetch categories for Category Modal\r\n  useEffect(() => {\r\n    fetch(baseUri + `allInterests`)\r\n      .then((result) => result.json())\r\n      .then((json) => setCategories(json))\r\n      .catch(() => setCategories([]));\r\n  }, []);\r\n\r\n  // Creates Date object out of date and time strings (or null).\r\n  const createDateObject = (date: string, time: string) => {\r\n    try {\r\n      let dateArray = date.split(', ')[1].split('.');\r\n      let timeArray = time.split(':');\r\n      let sY = Number(dateArray[2]);\r\n      let sM = Number(dateArray[1]) - 1;\r\n      let sD = Number(dateArray[0]);\r\n      let sh = Number(timeArray[0]);\r\n      let sm = Number(timeArray[1]);\r\n      return new Date(sY, sM, sD, sh, sm);\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Start Date Confirm\r\n  const handleStartDateConfirm = (date) => {\r\n    Moment.locale('en');\r\n    if (endDate) {\r\n      let end = createDateObject(endDate, '23:59')\r\n      if (end < date) {\r\n        setStartDateError(true);\r\n        setEndDateError(true);\r\n      } else {\r\n        setStartDateError(false);\r\n        setEndDateError(false);\r\n        setStartTimeDisable(false);\r\n      }\r\n    } else {\r\n      setStartTimeDisable(false);\r\n    }\r\n    let newText = Moment(date).format('ddd, D.M.YYYY');\r\n    setStartDate(newText);\r\n    setStartDatePickerVisibility(false);\r\n  };\r\n\r\n  // Start Time Confirm\r\n  const handleStartTimeConfirm = (time) => {\r\n    Moment.locale('en');\r\n    let newText = Moment(time).format('HH:mm');\r\n    if (endTime) {\r\n      let end = createDateObject(endDate, endTime);\r\n      let start = createDateObject(startDate, newText);\r\n      if (end < start) {\r\n        setStartTimeError(true);\r\n        setEndTimeError(true);\r\n      } else {\r\n        setStartTimeError(false);\r\n        setEndTimeError(false);\r\n      }\r\n    }\r\n    setStartTime(newText);\r\n    setStartTimePickerVisibility(false);\r\n  };\r\n\r\n  // End Date Confirm\r\n  const handleEndDateConfirm = (date) => {\r\n    if (startDate) {\r\n      let start = createDateObject(startDate, '00:00')\r\n      if (start > date) {\r\n        setStartDateError(true);\r\n        setEndDateError(true);\r\n      } else {\r\n        setStartDateError(false);\r\n        setEndDateError(false);\r\n        setEndTimeDisable(false);\r\n      }\r\n    } else {\r\n      setEndTimeDisable(false);\r\n    }\r\n    Moment.locale('en');\r\n    let newText = Moment(date).format('ddd, D.M.YYYY');\r\n    setEndDate(newText);\r\n    setEndDatePickerVisibility(false);\r\n  };\r\n\r\n  // End Time Confirm\r\n  const handleEndTimeConfirm = (time) => {\r\n    Moment.locale('en');\r\n    let newText = Moment(time).format('HH:mm');\r\n    if (startTime) {\r\n      let end = createDateObject(endDate, newText);\r\n      let start = createDateObject(startDate, endTime);\r\n      if (end < start) {\r\n        setStartTimeError(true);\r\n        setEndTimeError(true);\r\n      } else {\r\n        setStartTimeError(false);\r\n        setEndTimeError(false);\r\n      }\r\n    }\r\n    setEndTime(newText);\r\n    setEndTimePickerVisibility(false);\r\n  };\r\n\r\n  // Geocoding address to latitude and longitude\r\n  async function geocode(address: string) {\r\n    try {\r\n      let res = await fetch(baseUri + `geocode?address=${address}`)\r\n      let json = await res.json();\r\n      setGeolocationError(false)\r\n      setGeolocation({\r\n        'address': address,\r\n        'latitude': json.latitude,\r\n        'longitude': json.longitude\r\n      });\r\n    } catch (error) {\r\n      setGeolocation('unknown')\r\n      setGeolocationError(true);\r\n    }\r\n  }\r\n\r\n  // Image handler\r\n  const chooseImage = (imageNumber: Number) => {\r\n    ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      base64: true,\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      quality: 0.5,\r\n    }).then((data) => {\r\n      if (!data.cancelled) {\r\n        if (imageNumber == 1) {\r\n          setImage1(data);\r\n          setImageButtonText1(t('Post.Change'))\r\n        } else if (imageNumber == 2) {\r\n          setImage2(data);\r\n          setImageButtonText2(t('Post.Change'))\r\n        } else if (imageNumber == 3) {\r\n          setImage3(data);\r\n          setImageButtonText3(t('Post.Change'))\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Image remover\r\n  const removeImage = (imageNumber: Number) => {\r\n    if (imageNumber == 1) {\r\n      setImage1(null);\r\n      setImageButtonText1(t('Post.AddImage'))\r\n    } else if (imageNumber == 2) {\r\n      setImage2(null);\r\n      setImageButtonText2(t('Post.AddImage'))\r\n    } else if (imageNumber == 3) {\r\n      setImage3(null);\r\n      setImageButtonText3(t('Post.AddImage'))\r\n    }\r\n  }\r\n\r\n  const create = () => () => {\r\n    let images = []\r\n    if (image1) images.push(image1['base64'])\r\n    if (image2) images.push(image2['base64'])\r\n    if (image3) images.push(image3['base64'])\r\n    let params = {\r\n      initiator: initiator.uid,\r\n      category: selectedCategory,\r\n      title: title,\r\n      startDateTime: createDateObject(startDate, startTime),\r\n      endDateTime: createDateObject(endDate, endTime),\r\n      recurrent: recurrentSwitch.toString(),\r\n      geolocation: geolocation.toString(),\r\n      description: description,\r\n      imagesBase64: images,\r\n      managers: [initiator.uid],\r\n      participants: [initiator.uid],\r\n      status: 'open'\r\n    }\r\n    let missing = validateInputs(params);\r\n    if (missing.length === 0) {\r\n      sendNewActivity(params);\r\n      navigation.navigate('PostSuccess');\r\n    } else {\r\n      Toast.show({\r\n        type: 'error',\r\n        text1: t('Post.TryAgain'),\r\n        text2: missing.join(', ')\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // Rendering\r\n  return (\r\n\r\n    <Block\r\n\r\n      color={colors.card}\r\n      paddingTop={sizes.m}\r\n      paddingHorizontal={sizes.padding}>\r\n\r\n      <Text p semibold marginBottom={sizes.sm}>{t('Post.PleaseFill')}</Text>\r\n\r\n      <Block>\r\n\r\n        <Block marginBottom={sizes.sm}>\r\n          <Input value={initiator.uid} editable={false} disabled />\r\n        </Block>\r\n\r\n        <Block marginBottom={sizes.sm} marginTop={sizes.xs}>\r\n          <Button row gradient={gradients.dark} onPress={() => setShowCategoryModal(true)}>\r\n            <Block row align=\"center\" justify=\"space-between\" paddingHorizontal={sizes.sm}>\r\n              <Text white bold marginRight={sizes.sm}>{selectedCategory}</Text>\r\n              <Image source={assets.arrow} color={colors.white} transform={[{ rotate: '90deg' }]} />\r\n            </Block>\r\n          </Button>\r\n          <Modal visible={showCategoryModal} onRequestClose={() => setShowCategoryModal(false)}>\r\n            <FlatList keyExtractor={(index) => `${index}`}\r\n              data={categories}\r\n              renderItem={({ item }) => (\r\n                <Button\r\n                  marginBottom={sizes.sm}\r\n                  onPress={() => {\r\n                    setSelectedCategory(item);\r\n                    setShowCategoryModal(false);\r\n                  }}>\r\n                  <Text p white semibold transform=\"uppercase\">{item}</Text>\r\n                </Button>\r\n              )}\r\n            />\r\n          </Modal>\r\n        </Block>\r\n\r\n        <Block marginBottom={sizes.sm}>\r\n          <TextInput label={t('Post.ActivityTitle')} mode='outlined' autoComplete={false} activeOutlineColor={colors.info}\r\n            onChangeText={(newText) => { setTitle(newText) }} />\r\n        </Block>\r\n\r\n        <Block row marginBottom={sizes.sm}>\r\n\r\n          <Block marginRight={sizes.sm / 2}>\r\n            <TextInput label={t('Post.StartDate')} mode='outlined' value={startDate} error={startDateError} autoComplete={false}\r\n              showSoftInputOnFocus={false} ref={startDateFocus} activeOutlineColor={colors.info}\r\n              onFocus={() => { setStartDatePickerVisibility(true); startDateFocus.current.blur(); }}\r\n            />\r\n          </Block>\r\n\r\n          <Block marginLeft={sizes.sm / 2}>\r\n            <TextInput label={t('Post.StartTime')} mode='outlined' value={startTime} error={startTimeError} autoComplete={false}\r\n              showSoftInputOnFocus={false} ref={startTimeFocus} disabled={startTimeDisable} activeOutlineColor={colors.info}\r\n              onFocus={() => { setStartTimePickerVisibility(true); startTimeFocus.current.blur(); }} />\r\n          </Block>\r\n\r\n          <DateTimePickerModal\r\n            isVisible={isStartDatePickerVisible}\r\n            mode=\"date\"\r\n            onConfirm={handleStartDateConfirm}\r\n            onCancel={() => setStartDatePickerVisibility(false)}\r\n          />\r\n\r\n          <DateTimePickerModal\r\n            isVisible={isStartTimePickerVisible}\r\n            mode=\"time\"\r\n            onConfirm={handleStartTimeConfirm}\r\n            onCancel={() => setStartTimePickerVisibility(false)}\r\n          />\r\n\r\n        </Block>\r\n\r\n        <Block row marginBottom={sizes.sm}>\r\n\r\n          <Block marginRight={sizes.sm / 2}>\r\n            <TextInput label={t('Post.EndDate')} mode='outlined' value={endDate} error={endDateError} autoComplete={false}\r\n              showSoftInputOnFocus={false} ref={endDateFocus} activeOutlineColor={colors.info}\r\n              onFocus={() => { setEndDatePickerVisibility(true); endDateFocus.current.blur(); }} />\r\n          </Block>\r\n\r\n          <Block marginLeft={sizes.sm / 2}>\r\n            <TextInput label={t('Post.EndTime')} mode='outlined' value={endTime} error={endTimeError} autoComplete={false}\r\n              showSoftInputOnFocus={false} ref={endTimeFocus} disabled={endTimeDisable} activeOutlineColor={colors.info}\r\n              onFocus={() => { setEndTimePickerVisibility(true); endTimeFocus.current.blur(); }} />\r\n          </Block>\r\n\r\n          <DateTimePickerModal\r\n            isVisible={isEndDatePickerVisible}\r\n            mode=\"date\"\r\n            onConfirm={handleEndDateConfirm}\r\n            onCancel={() => setEndDatePickerVisibility(false)}\r\n          />\r\n\r\n          <DateTimePickerModal\r\n            isVisible={isEndTimePickerVisible}\r\n            mode=\"time\"\r\n            onConfirm={handleEndTimeConfirm}\r\n            onCancel={() => setEndTimePickerVisibility(false)}\r\n          />\r\n\r\n        </Block>\r\n\r\n        <Block row flex={0} align=\"center\" justify=\"space-between\" marginBottom={sizes.s}>\r\n          <Text>{t('Post.Recurrent')}</Text>\r\n          <Block row flex={0}>\r\n            <Text>{recurrentSwitch ? t('Post.RecurrentYes') : t('Post.RecurrentNo')}</Text>\r\n            <Switch checked={recurrentSwitch} onPress={(checked) => setRecurrentSwitch(checked)} />\r\n          </Block>\r\n\r\n        </Block>\r\n\r\n        <Block marginBottom={sizes.sm}>\r\n          <TextInput label={t('Post.Location')} mode='outlined' error={geolocationError} autoComplete={false} activeOutlineColor={colors.info}\r\n            onChangeText={(newText) => { geocode(newText) }} />\r\n        </Block>\r\n\r\n        <Block marginBottom={sizes.sm}>\r\n          <TextInput label={t('Post.Description')} mode='outlined' autoComplete={false} multiline={true} numberOfLines={7} activeOutlineColor={colors.info}\r\n            onChangeText={(newText) => { setDescription(newText) }} />\r\n        </Block>\r\n\r\n        <Block row marginBottom={sizes.s} align='center'>\r\n          <Block>\r\n            {image1 && (<Block align='flex-start' marginRight={sizes.xs}>\r\n              <Image\r\n                source={{ uri: image1.uri }}\r\n                style={{ width: 100, height: 100, borderColor: 'black', borderWidth: 1 }} />\r\n            </Block>)}\r\n          </Block>\r\n\r\n          <Block>\r\n            {image2 && (<Block align='center' marginHorizontal={sizes.xs}>\r\n              <Image\r\n                source={{ uri: image2.uri }}\r\n                style={{ width: 100, height: 100, borderColor: 'black', borderWidth: 1 }} />\r\n            </Block>)}\r\n          </Block>\r\n\r\n          <Block>\r\n            {image3 && (<Block align='flex-end' marginLeft={sizes.xs}>\r\n              <Image\r\n                source={{ uri: image3.uri }}\r\n                style={{ width: 100, height: 100, borderColor: 'black', borderWidth: 1 }} />\r\n            </Block>)}\r\n          </Block>\r\n\r\n        </Block>\r\n        <Block row marginBottom={sizes.sm}>\r\n          <Block marginRight={sizes.xs}>\r\n            <Button flex={1} gradient={gradients.dark}\r\n              onPress={() => chooseImage(1)} onLongPress={() => removeImage(1)}>\r\n              <Text white bold>{imageButtonText1}</Text>\r\n            </Button>\r\n          </Block>\r\n          <Block marginHorizontal={sizes.xs}>\r\n            <Button flex={1} gradient={gradients.dark}\r\n              onPress={() => chooseImage(2)} onLongPress={() => removeImage(2)}>\r\n              <Text white bold>{imageButtonText2}</Text>\r\n            </Button>\r\n          </Block>\r\n          <Block marginLeft={sizes.xs}>\r\n            <Button flex={1} gradient={gradients.dark}\r\n              onPress={() => chooseImage(3)} onLongPress={() => removeImage(3)}>\r\n              <Text white bold>{imageButtonText3}</Text>\r\n            </Button>\r\n          </Block>\r\n        </Block>\r\n\r\n      </Block>\r\n\r\n      <Block>\r\n\r\n        {/*\r\n        <Input placeholder=\"Managers\" marginBottom={sizes.sm} onChangeText={(newText) => {\r\n          setForm(prevState => ({ ...prevState, managers: newText }));\r\n        }} />\r\n        <Input placeholder=\"Invited\" marginBottom={sizes.sm} onChangeText={(newText) => {\r\n          setForm(prevState => ({ ...prevState, invited: newText }));\r\n        }} />\r\n        */}\r\n\r\n        <Block>\r\n          <Button flex={1} gradient={gradients.primary} marginBottom={sizes.base} onPress={create}>\r\n            <Text white bold transform=\"uppercase\">{t('Post.Create')}</Text>\r\n          </Button>\r\n        </Block>\r\n\r\n        <Toast position='bottom' bottomOffset={80} onPress={() => Toast.hide()} />\r\n\r\n      </Block>\r\n    </Block >\r\n  );\r\n};\r\n\r\nconst Post = () => {\r\n  const { assets, sizes } = useTheme();\r\n  const navigation = useNavigation();\r\n  const headerHeight = useHeaderHeight();\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerBackground: () => (\r\n        <Image\r\n          radius={0}\r\n          resizeMode=\"cover\"\r\n          width={sizes.width}\r\n          height={headerHeight}\r\n          source={assets.background}\r\n        />\r\n      ),\r\n    });\r\n  }, [assets.background, navigation, sizes.width, headerHeight]);\r\n\r\n  return (\r\n    <Block safe>\r\n      <Block scroll>\r\n        <Form />\r\n      </Block>\r\n    </Block>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}