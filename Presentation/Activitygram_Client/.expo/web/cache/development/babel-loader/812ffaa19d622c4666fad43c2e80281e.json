{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useTheme, useTranslation } from \"../hooks\";\nimport { Block, Button, Image, Text } from \"../components\";\nimport 'react-native-gesture-handler';\nimport { BASE_URL } from \"../constants/appConstants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar isAndroid = Platform.OS === 'android';\n\nvar ImageSeries = function ImageSeries() {\n  var _useTheme = useTheme(),\n      assets = _useTheme.assets,\n      sizes = _useTheme.sizes,\n      colors = _useTheme.colors;\n\n  var IMAGE_SIZE = (sizes.width - (sizes.padding + sizes.sm) * 2) / 3;\n  var IMAGE_VERTICAL_SIZE = (sizes.width - (sizes.padding + sizes.sm) * 2) / 2;\n  var IMAGE_MARGIN = (sizes.width - IMAGE_SIZE * 3 - sizes.padding * 2) / 2;\n  var IMAGE_VERTICAL_MARGIN = (sizes.width - (IMAGE_VERTICAL_SIZE + sizes.sm) * 2) / 2;\n  return _jsxs(Block, {\n    row: true,\n    justify: \"space-between\",\n    wrap: \"wrap\",\n    children: [_jsx(Image, {\n      resizeMode: \"cover\",\n      source: assets == null ? void 0 : assets.background,\n      marginBottom: IMAGE_MARGIN,\n      style: {\n        height: IMAGE_SIZE,\n        width: IMAGE_SIZE\n      }\n    }), _jsx(Image, {\n      resizeMode: \"cover\",\n      source: assets == null ? void 0 : assets.background,\n      marginBottom: IMAGE_MARGIN,\n      style: {\n        height: IMAGE_SIZE,\n        width: IMAGE_SIZE\n      }\n    }), _jsx(Image, {\n      resizeMode: \"cover\",\n      source: assets == null ? void 0 : assets.background,\n      marginBottom: IMAGE_MARGIN,\n      style: {\n        height: IMAGE_SIZE,\n        width: IMAGE_SIZE\n      }\n    })]\n  });\n};\n\nvar Profile = function Profile() {\n  var _useTheme2 = useTheme(),\n      assets = _useTheme2.assets,\n      sizes = _useTheme2.sizes,\n      colors = _useTheme2.colors;\n\n  var navigation = useNavigation();\n  var headerHeight = useHeaderHeight();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  useEffect(function () {\n    var userId = '627659c91fbdd7e2c67d5e11';\n    fetch(BASE_URL + 'getUser?user_id=' + userId, {\n      method: 'GET'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setProfile(responseJson);\n    }).catch(function (error) {\n      console.error(error + \" detected\");\n    });\n  }, [profile, setProfile]);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackground: function headerBackground() {\n        return _jsx(Image, {\n          radius: 0,\n          resizeMode: \"cover\",\n          width: sizes.width,\n          height: headerHeight,\n          source: assets.background\n        });\n      }\n    });\n  }, [assets.background, navigation, sizes.width, headerHeight]);\n  var IMAGE_SIZE = (sizes.width - (sizes.padding + sizes.sm) * 2) / 4;\n  var IMAGE_VERTICAL_SIZE = (sizes.width - (sizes.padding + sizes.sm) * 2) / 2;\n  var IMAGE_MARGIN = (sizes.width - IMAGE_SIZE * 3 - sizes.padding * 2) / 2;\n  var fullName = profile ? profile.fullName : '';\n  var username = profile ? profile.username : '';\n  var bio = profile ? profile.bio : '';\n  var interests = profile ? profile.interests : [];\n  return _jsx(Block, {\n    safe: true,\n    children: _jsx(Block, {\n      scroll: true,\n      paddingHorizontal: sizes.s,\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: {\n        paddingBottom: sizes.padding\n      },\n      children: _jsxs(Block, {\n        flex: 0,\n        marginTop: sizes.sm,\n        children: [_jsx(Image, {\n          background: true,\n          resizeMode: \"cover\",\n          padding: sizes.sm,\n          paddingBottom: sizes.l,\n          radius: sizes.cardRadius,\n          source: assets.background,\n          children: _jsxs(Block, {\n            flex: 0,\n            align: \"center\",\n            children: [_jsx(Image, {\n              width: 128,\n              height: 128,\n              marginBottom: sizes.sm,\n              source: assets.card1\n            }), _jsx(Text, {\n              h2: true,\n              semibold: true,\n              center: true,\n              white: true,\n              children: fullName\n            }), _jsx(Text, {\n              h5: true,\n              center: true,\n              white: true,\n              marginBottom: sizes.md,\n              children: username\n            })]\n          })\n        }), _jsx(Block, {\n          flex: 0,\n          radius: sizes.sm,\n          shadow: !isAndroid,\n          marginTop: -sizes.l,\n          marginHorizontal: \"8%\",\n          color: \"rgba(255,255,255,0.2)\",\n          children: _jsxs(Block, {\n            blur: true,\n            flex: 0,\n            intensity: 100,\n            radius: sizes.sm,\n            overflow: \"hidden\",\n            tint: colors.blurTint,\n            justify: \"space-evenly\",\n            paddingHorizontal: sizes.l,\n            renderToHardwareTextureAndroid: true,\n            children: [_jsx(Text, {\n              h5: true,\n              center: true,\n              marginTop: sizes.sm,\n              children: t('profile.bio')\n            }), _jsx(Text, {\n              center: true,\n              marginBottom: sizes.sm,\n              children: bio\n            })]\n          })\n        }), _jsxs(Block, {\n          paddingHorizontal: sizes.sm,\n          marginTop: sizes.sm,\n          children: [_jsxs(Block, {\n            row: true,\n            align: \"center\",\n            justify: \"space-between\",\n            children: [_jsx(Text, {\n              h4: true,\n              semibold: true,\n              children: t('profile.InterestsIn')\n            }), _jsx(Button, {})]\n          }), _jsx(Block, {\n            row: true,\n            justify: \"space-between\",\n            wrap: \"wrap\",\n            children: interests == null ? void 0 : interests.map(function (interest) {\n              return _jsxs(Block, {\n                children: [_jsx(Text, {\n                  color: colors.secondary,\n                  children: interest\n                }, \"text-\" + interest), _jsx(Image, {\n                  resizeMode: \"cover\",\n                  source: assets == null ? void 0 : assets[interest],\n                  marginBottom: IMAGE_MARGIN,\n                  color: colors.secondary,\n                  style: {\n                    height: IMAGE_SIZE,\n                    width: IMAGE_SIZE,\n                    borderColor: 'black'\n                  }\n                }, \"image-\" + interest)]\n              }, \"block-\" + interest);\n            })\n          }), _jsxs(Block, {\n            row: true,\n            align: \"center\",\n            justify: \"space-between\",\n            children: [_jsx(Text, {\n              h4: true,\n              semibold: true,\n              children: t('profile.ParticipatedIn')\n            }), _jsx(Button, {\n              onPress: function onPress() {\n                console.log('Pressed');\n              },\n              children: _jsx(Text, {\n                p: true,\n                primary: true,\n                semibold: true,\n                children: \"View all\"\n              })\n            })]\n          }), _jsx(ImageSeries, {})]\n        })]\n      })\n    })\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/screens/Profile.tsx"],"names":["React","useLayoutEffect","useState","useEffect","useNavigation","useHeaderHeight","useTheme","useTranslation","Block","Button","Image","Text","BASE_URL","isAndroid","Platform","OS","ImageSeries","assets","sizes","colors","IMAGE_SIZE","width","padding","sm","IMAGE_VERTICAL_SIZE","IMAGE_MARGIN","IMAGE_VERTICAL_MARGIN","background","height","Profile","navigation","headerHeight","profile","setProfile","t","userId","fetch","method","then","response","json","responseJson","catch","error","console","setOptions","headerBackground","fullName","username","bio","interests","s","paddingBottom","l","cardRadius","card1","md","blurTint","map","interest","secondary","borderColor","log"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState, useCallback, useEffect } from 'react';\r\nimport {Platform, Linking} from 'react-native';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {useHeaderHeight} from '@react-navigation/stack';\r\n\r\nimport { useData, useTheme, useTranslation } from '../hooks';\r\nimport { Block, Button, Image, Text } from '../components';\r\nimport 'react-native-gesture-handler';\r\nimport { IUser } from '../constants/types';\r\n\r\nimport { BASE_URL } from '../constants/appConstants';\r\n\r\nconst isAndroid = Platform.OS === 'android';\r\n\r\nconst ImageSeries = () => {\r\n  const {assets, sizes, colors } = useTheme();\r\n\r\n  const IMAGE_SIZE = (sizes.width - (sizes.padding + sizes.sm) * 2) / 3;\r\n  const IMAGE_VERTICAL_SIZE =\r\n    (sizes.width - (sizes.padding + sizes.sm) * 2) / 2;\r\n  const IMAGE_MARGIN = (sizes.width - IMAGE_SIZE * 3 - sizes.padding * 2) / 2;\r\n  const IMAGE_VERTICAL_MARGIN =\r\n    (sizes.width - (IMAGE_VERTICAL_SIZE + sizes.sm) * 2) / 2;\r\n\r\n  return(\r\n    <Block row justify=\"space-between\" wrap=\"wrap\">\r\n            <Image\r\n              resizeMode=\"cover\"\r\n              source={assets?.background}\r\n              marginBottom={IMAGE_MARGIN}\r\n              style={{\r\n                height: IMAGE_SIZE,\r\n                width: IMAGE_SIZE,\r\n              }}\r\n            />\r\n            <Image\r\n              resizeMode=\"cover\"\r\n              source={assets?.background}\r\n              marginBottom={IMAGE_MARGIN}\r\n              style={{\r\n                height: IMAGE_SIZE,\r\n                width: IMAGE_SIZE,\r\n              }}\r\n            />\r\n            <Image\r\n              resizeMode=\"cover\"\r\n              source={assets?.background}\r\n              marginBottom={IMAGE_MARGIN}\r\n              style={{\r\n                height: IMAGE_SIZE,\r\n                width: IMAGE_SIZE,\r\n              }}\r\n            />\r\n    </Block>\r\n  )\r\n}\r\nconst Profile = () => {\r\n  const {assets, sizes, colors } = useTheme();\r\n  const navigation = useNavigation();\r\n  const headerHeight = useHeaderHeight();\r\n  const [profile, setProfile] = useState<IUser>();\r\n  const {t} = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const userId = '627659c91fbdd7e2c67d5e11';\r\n    fetch(BASE_URL + 'getUser?user_id=' + userId, {\r\n      method: 'GET'\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setProfile(responseJson);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error + \" detected\");\r\n      });\r\n\r\n  }, [profile, setProfile])\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerBackground: () => (\r\n        <Image\r\n          radius={0}\r\n          resizeMode=\"cover\"\r\n          width={sizes.width}\r\n          height={headerHeight}\r\n          source={assets.background}\r\n        />\r\n      ),\r\n    });\r\n  }, [assets.background, navigation, sizes.width, headerHeight]);\r\n\r\n  const IMAGE_SIZE = (sizes.width - (sizes.padding + sizes.sm) * 2) / 4;\r\n  const IMAGE_VERTICAL_SIZE =\r\n    (sizes.width - (sizes.padding + sizes.sm) * 2) / 2;\r\n  const IMAGE_MARGIN = (sizes.width - IMAGE_SIZE * 3 - sizes.padding * 2) / 2;\r\n  \r\n\r\n  const fullName = profile ? profile.fullName : '';\r\n  const username = profile ? profile.username : '';\r\n  const bio = profile ? profile.bio : '';\r\n  const interests = profile ? profile.interests : [];\r\n\r\n  return (\r\n    <Block safe>\r\n      <Block\r\n        scroll\r\n        paddingHorizontal={sizes.s}\r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={{paddingBottom: sizes.padding}}>\r\n        <Block flex={0} marginTop={sizes.sm}>\r\n          <Image\r\n            background\r\n            resizeMode=\"cover\"\r\n            padding={sizes.sm}\r\n            paddingBottom={sizes.l}\r\n            radius={sizes.cardRadius}\r\n            source={assets.background}>\r\n            <Block flex={0} align=\"center\">\r\n              <Image\r\n                width={128}\r\n                height={128}\r\n                marginBottom={sizes.sm}\r\n                source={assets.card1}\r\n              />\r\n              <Text h2 semibold center white>\r\n                {fullName}\r\n              </Text>\r\n              <Text h5 center white marginBottom={sizes.md}>\r\n                {username}\r\n              </Text>\r\n            </Block>\r\n          </Image>\r\n\r\n          <Block\r\n            flex={0}\r\n            radius={sizes.sm}\r\n            shadow={!isAndroid} // disabled shadow on Android due to blur overlay + elevation issue\r\n            marginTop={-sizes.l}\r\n            marginHorizontal=\"8%\"\r\n            color=\"rgba(255,255,255,0.2)\">\r\n            <Block\r\n              blur\r\n              flex={0}\r\n              intensity={100}\r\n              radius={sizes.sm}\r\n              overflow=\"hidden\"\r\n              tint={colors.blurTint}\r\n              justify=\"space-evenly\"\r\n              paddingHorizontal={sizes.l}\r\n              renderToHardwareTextureAndroid>\r\n                <Text h5 center marginTop={sizes.sm}>{t('profile.bio')}</Text>\r\n                <Text center marginBottom={sizes.sm}>{bio}</Text>\r\n            </Block>\r\n          </Block>\r\n\r\n          <Block paddingHorizontal={sizes.sm} marginTop={sizes.sm}>\r\n          <Block row align=\"center\" justify=\"space-between\">\r\n            <Text h4 semibold>\r\n            {t('profile.InterestsIn')}\r\n            </Text>\r\n            <Button>\r\n            </Button>\r\n          </Block>\r\n          <Block row justify=\"space-between\" wrap=\"wrap\">\r\n          {interests?.map((interest) => (\r\n            <Block key={`block-${interest}`}>\r\n              <Text key={`text-${interest}`} color={colors.secondary}>{interest}</Text>\r\n            <Image\r\n            key={`image-${interest}`}\r\n            resizeMode=\"cover\"\r\n            source={assets?.[interest]}\r\n            marginBottom={IMAGE_MARGIN}\r\n            color={colors.secondary}\r\n            style={{\r\n              height: IMAGE_SIZE,\r\n              width: IMAGE_SIZE,\r\n              borderColor: 'black'\r\n            }}\r\n            />\r\n            </Block>\r\n          ))}\r\n\r\n          </Block>\r\n          \r\n          <Block row align=\"center\" justify=\"space-between\">\r\n            <Text h4 semibold>\r\n            {t('profile.ParticipatedIn')}\r\n            </Text>\r\n            <Button onPress={() => {console.log('Pressed')}}>\r\n              <Text p primary semibold>\r\n                View all\r\n              </Text>\r\n            </Button>\r\n          </Block>\r\n          <ImageSeries/>\r\n          </Block>\r\n        </Block>\r\n      </Block>\r\n    </Block>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}