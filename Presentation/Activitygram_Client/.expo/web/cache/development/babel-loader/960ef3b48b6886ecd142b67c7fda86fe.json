{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Appbar, TextInput, useTheme } from \"react-native-paper\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport ColumnsList from \"./lists/ColumnsList\";\nimport CompareList from \"./lists/CompareList\";\nimport List from \"./lists/List\";\nimport MultiSelectList from \"./lists/MultiSelectList\";\nimport SectionList from \"./lists/SectionList\";\nimport SelectList from \"./lists/SelectList\";\n\nvar EventList = function EventList() {\n  var _useTheme = useTheme(),\n      _useTheme$colors = _useTheme.colors,\n      background = _useTheme$colors.background,\n      surface = _useTheme$colors.surface;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openSelector = _useState2[0],\n      setOpenSelector = _useState2[1];\n\n  var _useState3 = useState(\"standard\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      insetBottom = _useState6[0],\n      setInsetBottom = _useState6[1];\n\n  var insets = useSafeAreaInsets();\n  var options = [{\n    label: \"Standard List\",\n    value: \"standard\"\n  }, {\n    label: \"Columns List\",\n    value: \"columns\"\n  }, {\n    label: \"Sections List\",\n    value: \"sections\"\n  }, {\n    label: \"Multiselect List\",\n    value: \"multiselect\"\n  }, {\n    label: \"Compare List\",\n    value: \"compare\"\n  }];\n  var selectedOption = options.find(function (item) {\n    return item.value === selected;\n  });\n  return React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: background,\n      paddingBottom: insetBottom + insets.bottom + 64\n    }]\n  }, React.createElement(Appbar.Header, {\n    style: [styles.header, {\n      height: 75\n    }]\n  }, React.createElement(Appbar.Content, {\n    title: \"Explore\",\n    subtitle: \"10 items\"\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.containerBottom, {\n      backgroundColor: surface,\n      bottom: insets.bottom\n    }],\n    onPress: function onPress() {\n      return setOpenSelector(!openSelector);\n    },\n    onLayout: function onLayout(event) {\n      setInsetBottom(event.height || 0);\n    }\n  }, React.createElement(TextInput, {\n    label: \"View mode\",\n    editable: false,\n    onTouchStart: function onTouchStart() {\n      return setOpenSelector(true);\n    },\n    value: selectedOption.label,\n    right: React.createElement(TextInput.Icon, {\n      name: \"chevron-down\",\n      onPress: function onPress() {\n        return setOpenSelector(!openSelector);\n      }\n    })\n  })), selected === \"standard\" ? React.createElement(List, null) : selected === \"columns\" ? React.createElement(ColumnsList, null) : selected === \"sections\" ? React.createElement(SectionList, null) : selected === \"multiselect\" ? React.createElement(MultiSelectList, null) : selected === \"compare\" ? React.createElement(CompareList, null) : null, openSelector && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      flex: 1,\n      backgroundColor: surface\n    }]\n  }, React.createElement(Appbar.Header, {\n    style: [styles.header, {\n      height: 75\n    }]\n  }, React.createElement(Appbar.Content, {\n    title: \"View mode\",\n    subtitle: \"Select the list view mode example...\"\n  })), React.createElement(SelectList, {\n    data: options,\n    value: selected,\n    onSelect: function onSelect(value) {\n      setSelected(value);\n      setOpenSelector(false);\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    flex: 1,\n    position: \"relative\"\n  }, Platform.select({\n    web: {\n      maxHeight: \"100vh\"\n    },\n    default: {}\n  })),\n  containerBottom: {\n    bottom: 0,\n    elevation: 999,\n    left: 0,\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex: 999\n  },\n  header: {\n    elevation: 0,\n    marginBottom: Platform.select({\n      web: 0,\n      default: -5\n    })\n  }\n});\nexport default EventList;","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/screens/eventList/eventList.jsx"],"names":["React","useState","Appbar","TextInput","useTheme","useSafeAreaInsets","ColumnsList","CompareList","List","MultiSelectList","SectionList","SelectList","EventList","colors","background","surface","openSelector","setOpenSelector","selected","setSelected","insetBottom","setInsetBottom","insets","options","label","value","selectedOption","find","item","styles","container","backgroundColor","paddingBottom","bottom","header","height","containerBottom","event","StyleSheet","absoluteFill","flex","create","position","Platform","select","web","maxHeight","default","elevation","left","width","zIndex","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\r\nimport { Appbar, TextInput, useTheme } from \"react-native-paper\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport ColumnsList from \"./lists/ColumnsList\";\r\nimport CompareList from \"./lists/CompareList\";\r\nimport List from \"./lists/List\";\r\nimport MultiSelectList from \"./lists/MultiSelectList\";\r\nimport SectionList from \"./lists/SectionList\";\r\nimport SelectList from \"./lists/SelectList\";\r\n\r\nconst EventList = () => {\r\n  const {\r\n    colors: { background, surface },\r\n  } = useTheme();\r\n  const [openSelector, setOpenSelector] = useState(false);\r\n  const [selected, setSelected] = useState(\"standard\");\r\n  const [insetBottom, setInsetBottom] = useState(0);\r\n  const insets = useSafeAreaInsets();\r\n  const options = [\r\n    { label: \"Standard List\", value: \"standard\" },\r\n    { label: \"Columns List\", value: \"columns\" },\r\n    { label: \"Sections List\", value: \"sections\" },\r\n    { label: \"Multiselect List\", value: \"multiselect\" },\r\n    { label: \"Compare List\", value: \"compare\" },\r\n  ];\r\n  const selectedOption = options.find((item) => item.value === selected);\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.container,\r\n        {\r\n          backgroundColor: background,\r\n          paddingBottom: insetBottom + insets.bottom + 64,\r\n        },\r\n      ]}\r\n    >\r\n      <Appbar.Header style={[styles.header, { height: 75 }]}>\r\n        <Appbar.Content title=\"Explore\" subtitle=\"10 items\" />\r\n      </Appbar.Header>\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.containerBottom,\r\n          { backgroundColor: surface, bottom: insets.bottom },\r\n        ]}\r\n        onPress={() => setOpenSelector(!openSelector)}\r\n        onLayout={(event) => {\r\n          setInsetBottom(event.height || 0);\r\n        }}\r\n      >\r\n        <TextInput\r\n          label=\"View mode\"\r\n          editable={false}\r\n          onTouchStart={() => setOpenSelector(true)}\r\n          value={selectedOption.label}\r\n          right={\r\n            <TextInput.Icon\r\n              name=\"chevron-down\"\r\n              onPress={() => setOpenSelector(!openSelector)}\r\n            />\r\n          }\r\n        />\r\n      </TouchableOpacity>\r\n      {selected === \"standard\" ? (\r\n        <List />\r\n      ) : selected === \"columns\" ? (\r\n        <ColumnsList />\r\n      ) : selected === \"sections\" ? (\r\n        <SectionList />\r\n      ) : selected === \"multiselect\" ? (\r\n        <MultiSelectList />\r\n      ) : selected === \"compare\" ? (\r\n        <CompareList />\r\n      ) : null}\r\n\r\n      {openSelector && (\r\n        <View\r\n          style={[\r\n            StyleSheet.absoluteFill,\r\n            { flex: 1, backgroundColor: surface },\r\n          ]}\r\n        >\r\n          <Appbar.Header style={[styles.header, { height: 75 }]}>\r\n            <Appbar.Content\r\n              title=\"View mode\"\r\n              subtitle=\"Select the list view mode example...\"\r\n            />\r\n          </Appbar.Header>\r\n          <SelectList\r\n            data={options}\r\n            value={selected}\r\n            onSelect={(value) => {\r\n              setSelected(value);\r\n              setOpenSelector(false);\r\n            }}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    position: \"relative\",\r\n    ...Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\r\n  },\r\n  containerBottom: {\r\n    bottom: 0,\r\n    elevation: 999,\r\n    left: 0,\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    zIndex: 999,\r\n  },\r\n  header: {\r\n    elevation: 0,\r\n    marginBottom: Platform.select({ web: 0, default: -5 }),\r\n  },\r\n});\r\n\r\nexport default EventList;"]},"metadata":{},"sourceType":"module"}