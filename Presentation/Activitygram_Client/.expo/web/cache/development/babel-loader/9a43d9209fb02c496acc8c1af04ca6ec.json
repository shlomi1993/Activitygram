{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useTheme, useTranslation } from \"../hooks\";\nimport { Block, Button, Image, Text, Checkbox, Modal } from \"../components\";\nimport 'react-native-gesture-handler';\nimport { BASE_URL } from \"../constants/appConstants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar isAndroid = Platform.OS === 'android';\n\nvar Activity = function Activity(_ref) {\n  var route = _ref.route;\n\n  var _useTheme = useTheme(),\n      assets = _useTheme.assets,\n      sizes = _useTheme.sizes,\n      colors = _useTheme.colors,\n      gradients = _useTheme.gradients;\n\n  var navigation = useNavigation();\n  var headerHeight = useHeaderHeight();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      activity = _useState2[0],\n      setActivity = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isChecked = _useState6[0],\n      setIsChecked = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showModal = _useState8[0],\n      setModal = _useState8[1];\n\n  var activityId = route.params.activityId;\n  useEffect(function () {\n    fetch(BASE_URL + 'getActivity?activity_id=' + activityId, {\n      method: 'GET'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setActivity(responseJson);\n    }).catch(function (error) {\n      console.error(error + \" detected\");\n    });\n  }, [activity]);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackground: function headerBackground() {\n        return _jsx(Image, {\n          radius: 0,\n          resizeMode: \"cover\",\n          width: sizes.width,\n          height: headerHeight,\n          source: assets.background\n        });\n      }\n    });\n  }, [assets.background, navigation, sizes.width, headerHeight]);\n  var IMAGE_SIZE = (sizes.width - (sizes.padding + sizes.sm) * 2) / 3;\n  var IMAGE_VERTICAL_SIZE = (sizes.width - (sizes.padding + sizes.sm) * 2) / 2;\n  var IMAGE_MARGIN = (sizes.width - IMAGE_SIZE * 3 - sizes.padding * 2) / 2;\n  var IMAGE_VERTICAL_MARGIN = (sizes.width - (IMAGE_VERTICAL_SIZE + sizes.sm) * 2) / 2;\n  var title = activity ? activity.title : '';\n  var description = activity ? activity.description : '';\n  var time = activity ? activity.date : '';\n\n  var onPressJoin = function onPressJoin() {\n    var userId = '627659c91fbdd7e2c67d5e11';\n    fetch(BASE_URL + 'getUser?user_id=' + userId, {\n      method: 'GET'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setUser(responseJson);\n    }).then(function () {\n      var updatedParticipants = activity.participants ? activity.participants : [];\n      updatedParticipants.push(userId);\n      fetch(BASE_URL + 'updateActivityParticipants?activity_id=' + activity._id + '&participants=' + encodeURIComponent(JSON.stringify(updatedParticipants)), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        }\n      });\n    }).then(function () {\n      setModal(true);\n    }).catch(function (error) {\n      console.error(error + \" detected\");\n    });\n  };\n\n  return _jsxs(Block, {\n    safe: true,\n    children: [_jsx(Block, {\n      scroll: true,\n      paddingHorizontal: sizes.s,\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: {\n        paddingBottom: sizes.padding\n      },\n      children: _jsxs(Block, {\n        flex: 0,\n        paddingTop: sizes.l,\n        paddingBottom: sizes.l,\n        children: [_jsx(Image, {\n          background: true,\n          resizeMode: \"cover\",\n          padding: sizes.sm,\n          paddingBottom: sizes.l,\n          radius: sizes.cardRadius,\n          source: assets.background,\n          children: _jsxs(Block, {\n            flex: 0,\n            align: \"center\",\n            children: [_jsx(Text, {\n              h5: true,\n              center: true,\n              white: true,\n              size: 24,\n              marginTop: sizes.sm,\n              children: title\n            }), _jsx(Text, {\n              p: true,\n              center: true,\n              white: true,\n              marginBottom: sizes.md,\n              children: description\n            })]\n          })\n        }), _jsx(Block, {\n          flex: 0,\n          radius: sizes.sm,\n          shadow: !isAndroid,\n          marginTop: -sizes.l,\n          marginHorizontal: \"8%\",\n          color: \"rgba(255,255,255,0.2)\",\n          children: _jsxs(Block, {\n            row: true,\n            blur: true,\n            flex: 0,\n            intensity: 100,\n            radius: sizes.sm,\n            overflow: \"hidden\",\n            tint: colors.blurTint,\n            justify: \"space-evenly\",\n            paddingVertical: sizes.sm,\n            renderToHardwareTextureAndroid: true,\n            children: [_jsxs(Block, {\n              align: \"center\",\n              children: [_jsx(Text, {\n                h5: true,\n                children: \"0\"\n              }), _jsx(Text, {\n                children: t('activity.going')\n              })]\n            }), _jsxs(Block, {\n              align: \"center\",\n              children: [_jsx(Text, {\n                h5: true,\n                children: \"0\"\n              }), _jsx(Text, {\n                children: t('activity.left')\n              })]\n            }), _jsxs(Block, {\n              align: \"center\",\n              children: [_jsx(Text, {\n                h5: true,\n                children: \"0\"\n              }), _jsx(Text, {\n                children: t('activity.inTotal')\n              })]\n            })]\n          })\n        }), _jsx(Block, {\n          align: \"center\",\n          children: _jsx(Button, {\n            light: true,\n            marginBottom: sizes.xs,\n            marginTop: sizes.s,\n            radius: 15,\n            paddingRight: sizes.l,\n            paddingLeft: sizes.l,\n            onPress: function onPress() {\n              onPressJoin();\n            },\n            children: _jsx(Text, {\n              bold: true,\n              transform: \"uppercase\",\n              children: t('activity.join')\n            })\n          })\n        }), _jsxs(Block, {\n          paddingHorizontal: sizes.sm,\n          marginTop: sizes.sm,\n          children: [_jsxs(Block, {\n            row: true,\n            align: \"center\",\n            justify: \"space-between\",\n            marginBottom: sizes.l,\n            children: [_jsx(Text, {\n              h5: true,\n              semibold: true,\n              children: t('activity.time')\n            }), _jsx(Text, {\n              p: true,\n              secondary: true,\n              semibold: true,\n              children: \"placeholder\"\n            })]\n          }), _jsxs(Block, {\n            row: true,\n            align: \"center\",\n            justify: \"space-between\",\n            marginBottom: sizes.l,\n            children: [_jsx(Text, {\n              h5: true,\n              semibold: true,\n              children: t('activity.createdBy')\n            }), _jsx(Text, {\n              p: true,\n              secondary: true,\n              semibold: true,\n              children: \"placeholder\"\n            })]\n          }), _jsxs(Block, {\n            row: true,\n            align: \"center\",\n            justify: \"space-between\",\n            marginBottom: sizes.l,\n            children: [_jsx(Text, {\n              h5: true,\n              semibold: true,\n              children: t('activity.notes')\n            }), _jsx(Text, {\n              p: true,\n              secondary: true,\n              semibold: true,\n              children: \"placeholder\"\n            })]\n          }), _jsxs(Block, {\n            row: true,\n            marginBottom: sizes.l,\n            children: [_jsx(Checkbox, {\n              checked: isChecked,\n              onPress: function onPress() {\n                return setIsChecked(!isChecked);\n              }\n            }), _jsx(Text, {\n              p: true,\n              marginLeft: sizes.sm,\n              children: \"I want to be a manager\"\n            })]\n          })]\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: showModal,\n      onRequestClose: function onRequestClose() {\n        return setModal(false);\n      },\n      children: _jsx(Text, {\n        h3: true,\n        white: true,\n        marginBottom: sizes.xl,\n        center: true,\n        children: t('activity.joined')\n      })\n    })]\n  });\n};\n\nexport default Activity;","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/screens/Activity.tsx"],"names":["React","useLayoutEffect","useState","useEffect","useNavigation","useHeaderHeight","useTheme","useTranslation","Block","Button","Image","Text","Checkbox","Modal","BASE_URL","isAndroid","Platform","OS","Activity","route","assets","sizes","colors","gradients","navigation","headerHeight","t","activity","setActivity","user","setUser","isChecked","setIsChecked","showModal","setModal","activityId","params","fetch","method","then","response","json","responseJson","catch","error","console","setOptions","headerBackground","width","background","IMAGE_SIZE","padding","sm","IMAGE_VERTICAL_SIZE","IMAGE_MARGIN","IMAGE_VERTICAL_MARGIN","title","description","time","date","onPressJoin","userId","updatedParticipants","participants","push","_id","encodeURIComponent","JSON","stringify","headers","s","paddingBottom","l","cardRadius","md","blurTint","xs","xl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,EAAwDC,SAAxD,QAAyE,OAAzE;;AAGA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,SAAkBC,QAAlB,EAA4BC,cAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,QAArC,EAA+CC,KAA/C;AACA,OAAO,8BAAP;AAEA,SAASC,QAAT;;;AACA,IAAMC,SAAS,GAAGC,QAAQ,CAACC,EAAT,KAAgB,SAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC9B,kBAA6Cb,QAAQ,EAArD;AAAA,MAAQc,MAAR,aAAQA,MAAR;AAAA,MAAgBC,KAAhB,aAAgBA,KAAhB;AAAA,MAAuBC,MAAvB,aAAuBA,MAAvB;AAAA,MAA+BC,SAA/B,aAA+BA,SAA/B;;AACA,MAAMC,UAAU,GAAGpB,aAAa,EAAhC;AACA,MAAMqB,YAAY,GAAGpB,eAAe,EAApC;;AAEA,wBAAcE,cAAc,EAA5B;AAAA,MAAQmB,CAAR,mBAAQA,CAAR;;AACA,kBAAgCxB,QAAQ,EAAxC;AAAA;AAAA,MAAOyB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwB1B,QAAQ,EAAhC;AAAA;AAAA,MAAO2B,IAAP;AAAA,MAAaC,OAAb;;AAEA,mBAAkC5B,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAO6B,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA8B9B,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAO+B,SAAP;AAAA,MAAkBC,QAAlB;;AACA,MAAQC,UAAR,GAAuBhB,KAAK,CAACiB,MAA7B,CAAQD,UAAR;AAEAhC,EAAAA,SAAS,CAAC,YAAM;AACdkC,IAAAA,KAAK,CAACvB,QAAQ,GAAG,0BAAX,GAAwCqB,UAAzC,EAAqD;AACxDG,MAAAA,MAAM,EAAE;AADgD,KAArD,CAAL,CAGGC,IAHH,CAGQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAHR,EAIGF,IAJH,CAIQ,UAACG,YAAD,EAAkB;AACtBd,MAAAA,WAAW,CAACc,YAAD,CAAX;AACD,KANH,EAOGC,KAPH,CAOS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,GAAG,WAAtB;AACD,KATH;AAUD,GAXQ,EAWN,CAACjB,QAAD,CAXM,CAAT;AAaA1B,EAAAA,eAAe,CAAC,YAAM;AACpBuB,IAAAA,UAAU,CAACsB,UAAX,CAAsB;AACpBC,MAAAA,gBAAgB,EAAE;AAAA,eAChB,KAAC,KAAD;AACE,UAAA,MAAM,EAAE,CADV;AAEE,UAAA,UAAU,EAAC,OAFb;AAGE,UAAA,KAAK,EAAE1B,KAAK,CAAC2B,KAHf;AAIE,UAAA,MAAM,EAAEvB,YAJV;AAKE,UAAA,MAAM,EAAEL,MAAM,CAAC6B;AALjB,UADgB;AAAA;AADE,KAAtB;AAWD,GAZc,EAYZ,CAAC7B,MAAM,CAAC6B,UAAR,EAAoBzB,UAApB,EAAgCH,KAAK,CAAC2B,KAAtC,EAA6CvB,YAA7C,CAZY,CAAf;AAcA,MAAMyB,UAAU,GAAG,CAAC7B,KAAK,CAAC2B,KAAN,GAAc,CAAC3B,KAAK,CAAC8B,OAAN,GAAgB9B,KAAK,CAAC+B,EAAvB,IAA6B,CAA5C,IAAiD,CAApE;AACA,MAAMC,mBAAmB,GACvB,CAAChC,KAAK,CAAC2B,KAAN,GAAc,CAAC3B,KAAK,CAAC8B,OAAN,GAAgB9B,KAAK,CAAC+B,EAAvB,IAA6B,CAA5C,IAAiD,CADnD;AAEA,MAAME,YAAY,GAAG,CAACjC,KAAK,CAAC2B,KAAN,GAAcE,UAAU,GAAG,CAA3B,GAA+B7B,KAAK,CAAC8B,OAAN,GAAgB,CAAhD,IAAqD,CAA1E;AACA,MAAMI,qBAAqB,GACzB,CAAClC,KAAK,CAAC2B,KAAN,GAAc,CAACK,mBAAmB,GAAGhC,KAAK,CAAC+B,EAA7B,IAAmC,CAAlD,IAAuD,CADzD;AAGA,MAAMI,KAAK,GAAG7B,QAAQ,GAAGA,QAAQ,CAAC6B,KAAZ,GAAoB,EAA1C;AACA,MAAMC,WAAW,GAAG9B,QAAQ,GAAGA,QAAQ,CAAC8B,WAAZ,GAA0B,EAAtD;AACA,MAAMC,IAAI,GAAG/B,QAAQ,GAAGA,QAAQ,CAACgC,IAAZ,GAAmB,EAAxC;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMC,MAAM,GAAG,0BAAf;AACAxB,IAAAA,KAAK,CAACvB,QAAQ,GAAG,kBAAX,GAAgC+C,MAAjC,EAAyC;AAC5CvB,MAAAA,MAAM,EAAE;AADoC,KAAzC,CAAL,CAGGC,IAHH,CAGQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAHR,EAIGF,IAJH,CAIQ,UAACG,YAAD,EAAkB;AACtBZ,MAAAA,OAAO,CAACY,YAAD,CAAP;AACD,KANH,EAOGH,IAPH,CAOQ,YAAM;AACV,UAAIuB,mBAA6B,GAAGnC,QAAQ,CAACoC,YAAT,GAAwBpC,QAAQ,CAACoC,YAAjC,GAAgD,EAApF;AACAD,MAAAA,mBAAmB,CAACE,IAApB,CAAyBH,MAAzB;AACAxB,MAAAA,KAAK,CAACvB,QAAQ,GAAG,yCAAX,GAAuDa,QAAQ,CAACsC,GAAhE,GAAsE,gBAAtE,GAAyFC,kBAAkB,CAACC,IAAI,CAACC,SAAL,CAAeN,mBAAf,CAAD,CAA5G,EAAmJ;AACtJxB,QAAAA,MAAM,EAAE,MAD8I;AAEtJ+B,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAF6I,OAAnJ,CAAL;AAMD,KAhBH,EAiBG9B,IAjBH,CAiBQ,YAAM;AACVL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAnBH,EAoBGS,KApBH,CAoBS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,GAAG,WAAtB;AACD,KAtBH;AAuBD,GAzBD;;AA0BA,SACE,MAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAA,eACE,KAAC,KAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,iBAAiB,EAAEvB,KAAK,CAACiD,CAF3B;AAGE,MAAA,4BAA4B,EAAE,KAHhC;AAIE,MAAA,qBAAqB,EAAE;AAAEC,QAAAA,aAAa,EAAElD,KAAK,CAAC8B;AAAvB,OAJzB;AAAA,gBAKE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAE,CAAb;AAAgB,QAAA,UAAU,EAAE9B,KAAK,CAACmD,CAAlC;AAAqC,QAAA,aAAa,EAAEnD,KAAK,CAACmD,CAA1D;AAAA,mBACE,KAAC,KAAD;AACE,UAAA,UAAU,MADZ;AAEE,UAAA,UAAU,EAAC,OAFb;AAGE,UAAA,OAAO,EAAEnD,KAAK,CAAC+B,EAHjB;AAIE,UAAA,aAAa,EAAE/B,KAAK,CAACmD,CAJvB;AAKE,UAAA,MAAM,EAAEnD,KAAK,CAACoD,UALhB;AAME,UAAA,MAAM,EAAErD,MAAM,CAAC6B,UANjB;AAAA,oBAOE,MAAC,KAAD;AAAO,YAAA,IAAI,EAAE,CAAb;AAAgB,YAAA,KAAK,EAAC,QAAtB;AAAA,uBACE,KAAC,IAAD;AAAM,cAAA,EAAE,MAAR;AAAS,cAAA,MAAM,MAAf;AAAgB,cAAA,KAAK,MAArB;AAAsB,cAAA,IAAI,EAAE,EAA5B;AAAgC,cAAA,SAAS,EAAE5B,KAAK,CAAC+B,EAAjD;AAAA,wBACGI;AADH,cADF,EAIE,KAAC,IAAD;AAAM,cAAA,CAAC,MAAP;AAAQ,cAAA,MAAM,MAAd;AAAe,cAAA,KAAK,MAApB;AAAqB,cAAA,YAAY,EAAEnC,KAAK,CAACqD,EAAzC;AAAA,wBACCjB;AADD,cAJF;AAAA;AAPF,UADF,EAkBE,KAAC,KAAD;AACE,UAAA,IAAI,EAAE,CADR;AAEE,UAAA,MAAM,EAAEpC,KAAK,CAAC+B,EAFhB;AAGE,UAAA,MAAM,EAAE,CAACrC,SAHX;AAIE,UAAA,SAAS,EAAE,CAACM,KAAK,CAACmD,CAJpB;AAKE,UAAA,gBAAgB,EAAC,IALnB;AAME,UAAA,KAAK,EAAC,uBANR;AAAA,oBAOE,MAAC,KAAD;AACE,YAAA,GAAG,MADL;AAEE,YAAA,IAAI,MAFN;AAGE,YAAA,IAAI,EAAE,CAHR;AAIE,YAAA,SAAS,EAAE,GAJb;AAKE,YAAA,MAAM,EAAEnD,KAAK,CAAC+B,EALhB;AAME,YAAA,QAAQ,EAAC,QANX;AAOE,YAAA,IAAI,EAAE9B,MAAM,CAACqD,QAPf;AAQE,YAAA,OAAO,EAAC,cARV;AASE,YAAA,eAAe,EAAEtD,KAAK,CAAC+B,EATzB;AAUE,YAAA,8BAA8B,MAVhC;AAAA,uBAWE,MAAC,KAAD;AAAO,cAAA,KAAK,EAAC,QAAb;AAAA,yBACE,KAAC,IAAD;AAAM,gBAAA,EAAE,MAAR;AAAA;AAAA,gBADF,EAEE,KAAC,IAAD;AAAA,0BAAO1B,CAAC,CAAC,gBAAD;AAAR,gBAFF;AAAA,cAXF,EAeE,MAAC,KAAD;AAAO,cAAA,KAAK,EAAC,QAAb;AAAA,yBACE,KAAC,IAAD;AAAM,gBAAA,EAAE,MAAR;AAAA;AAAA,gBADF,EAEE,KAAC,IAAD;AAAA,0BAAOA,CAAC,CAAC,eAAD;AAAR,gBAFF;AAAA,cAfF,EAmBE,MAAC,KAAD;AAAO,cAAA,KAAK,EAAC,QAAb;AAAA,yBACE,KAAC,IAAD;AAAM,gBAAA,EAAE,MAAR;AAAA;AAAA,gBADF,EAEE,KAAC,IAAD;AAAA,0BAAOA,CAAC,CAAC,kBAAD;AAAR,gBAFF;AAAA,cAnBF;AAAA;AAPF,UAlBF,EAkDE,KAAC,KAAD;AAAO,UAAA,KAAK,EAAC,QAAb;AAAA,oBACE,KAAC,MAAD;AAAQ,YAAA,KAAK,MAAb;AAAc,YAAA,YAAY,EAAEL,KAAK,CAACuD,EAAlC;AAAsC,YAAA,SAAS,EAAEvD,KAAK,CAACiD,CAAvD;AAA0D,YAAA,MAAM,EAAE,EAAlE;AAAsE,YAAA,YAAY,EAAEjD,KAAK,CAACmD,CAA1F;AAA6F,YAAA,WAAW,EAAEnD,KAAK,CAACmD,CAAhH;AAAmH,YAAA,OAAO,EAAE,mBAAM;AAACZ,cAAAA,WAAW;AAAG,aAAjJ;AAAA,sBACE,KAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,SAAS,EAAC,WAArB;AAAA,wBACGlC,CAAC,CAAC,eAAD;AADJ;AADF;AADF,UAlDF,EA2DE,MAAC,KAAD;AAAO,UAAA,iBAAiB,EAAEL,KAAK,CAAC+B,EAAhC;AAAoC,UAAA,SAAS,EAAE/B,KAAK,CAAC+B,EAArD;AAAA,qBACE,MAAC,KAAD;AAAO,YAAA,GAAG,MAAV;AAAW,YAAA,KAAK,EAAC,QAAjB;AAA0B,YAAA,OAAO,EAAC,eAAlC;AAAkD,YAAA,YAAY,EAAE/B,KAAK,CAACmD,CAAtE;AAAA,uBACE,KAAC,IAAD;AAAM,cAAA,EAAE,MAAR;AAAS,cAAA,QAAQ,MAAjB;AAAA,wBACG9C,CAAC,CAAC,eAAD;AADJ,cADF,EAIE,KAAC,IAAD;AAAM,cAAA,CAAC,MAAP;AAAQ,cAAA,SAAS,MAAjB;AAAkB,cAAA,QAAQ,MAA1B;AAAA;AAAA,cAJF;AAAA,YADF,EASE,MAAC,KAAD;AAAO,YAAA,GAAG,MAAV;AAAW,YAAA,KAAK,EAAC,QAAjB;AAA0B,YAAA,OAAO,EAAC,eAAlC;AAAkD,YAAA,YAAY,EAAEL,KAAK,CAACmD,CAAtE;AAAA,uBACE,KAAC,IAAD;AAAM,cAAA,EAAE,MAAR;AAAS,cAAA,QAAQ,MAAjB;AAAA,wBACG9C,CAAC,CAAC,oBAAD;AADJ,cADF,EAIE,KAAC,IAAD;AAAM,cAAA,CAAC,MAAP;AAAQ,cAAA,SAAS,MAAjB;AAAkB,cAAA,QAAQ,MAA1B;AAAA;AAAA,cAJF;AAAA,YATF,EAiBE,MAAC,KAAD;AAAO,YAAA,GAAG,MAAV;AAAW,YAAA,KAAK,EAAC,QAAjB;AAA0B,YAAA,OAAO,EAAC,eAAlC;AAAkD,YAAA,YAAY,EAAEL,KAAK,CAACmD,CAAtE;AAAA,uBACE,KAAC,IAAD;AAAM,cAAA,EAAE,MAAR;AAAS,cAAA,QAAQ,MAAjB;AAAA,wBACG9C,CAAC,CAAC,gBAAD;AADJ,cADF,EAIE,KAAC,IAAD;AAAM,cAAA,CAAC,MAAP;AAAQ,cAAA,SAAS,MAAjB;AAAkB,cAAA,QAAQ,MAA1B;AAAA;AAAA,cAJF;AAAA,YAjBF,EAyBE,MAAC,KAAD;AAAO,YAAA,GAAG,MAAV;AAAW,YAAA,YAAY,EAAEL,KAAK,CAACmD,CAA/B;AAAA,uBACE,KAAC,QAAD;AAAU,cAAA,OAAO,EAAEzC,SAAnB;AAA8B,cAAA,OAAO,EAAE;AAAA,uBAAMC,YAAY,CAAC,CAACD,SAAF,CAAlB;AAAA;AAAvC,cADF,EAEE,KAAC,IAAD;AAAM,cAAA,CAAC,MAAP;AAAQ,cAAA,UAAU,EAAEV,KAAK,CAAC+B,EAA1B;AAAA;AAAA,cAFF;AAAA,YAzBF;AAAA,UA3DF;AAAA;AALF,MADF,EAmGE,KAAC,KAAD;AAAO,MAAA,OAAO,EAAEnB,SAAhB;AAA2B,MAAA,cAAc,EAAE;AAAA,eAAMC,QAAQ,CAAC,KAAD,CAAd;AAAA,OAA3C;AAAA,gBACM,KAAC,IAAD;AAAM,QAAA,EAAE,MAAR;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,YAAY,EAAEb,KAAK,CAACwD,EAAnC;AAAuC,QAAA,MAAM,MAA7C;AAAA,kBAA+CnD,CAAC,CAAC,iBAAD;AAAhD;AADN,MAnGF;AAAA,IADF;AAyGD,CAtLD;;AAwLA,eAAeR,QAAf","sourcesContent":["import React, { useLayoutEffect, useState, useCallback, useEffect } from 'react';\r\nimport { Platform, Linking } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useHeaderHeight } from '@react-navigation/stack';\r\n\r\nimport { useData, useTheme, useTranslation } from '../hooks';\r\nimport { Block, Button, Image, Text, Checkbox, Modal } from '../components';\r\nimport 'react-native-gesture-handler';\r\nimport { IActivity, IUser } from '../constants/types';\r\nimport { BASE_URL } from '../constants/appConstants';\r\nconst isAndroid = Platform.OS === 'android';\r\n\r\nconst Activity = ({ route }) => {\r\n  const { assets, sizes, colors, gradients } = useTheme();\r\n  const navigation = useNavigation();\r\n  const headerHeight = useHeaderHeight();\r\n  // const { user } = useData();\r\n  const { t } = useTranslation();\r\n  const [activity, setActivity] = useState<IActivity>();\r\n  const [user, setUser] = useState<IUser>();\r\n  // const [participants, setParticipants] = useState();\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [showModal, setModal] = useState(false);\r\n  const { activityId } = route.params;\r\n\r\n  useEffect(() => {\r\n    fetch(BASE_URL + 'getActivity?activity_id=' + activityId, {\r\n      method: 'GET'\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setActivity(responseJson)\r\n      })\r\n      .catch((error) => {\r\n        console.error(error + \" detected\");\r\n      });\r\n  }, [activity])\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerBackground: () => (\r\n        <Image\r\n          radius={0}\r\n          resizeMode=\"cover\"\r\n          width={sizes.width}\r\n          height={headerHeight}\r\n          source={assets.background}\r\n        />\r\n      ),\r\n    });\r\n  }, [assets.background, navigation, sizes.width, headerHeight]);\r\n\r\n  const IMAGE_SIZE = (sizes.width - (sizes.padding + sizes.sm) * 2) / 3;\r\n  const IMAGE_VERTICAL_SIZE =\r\n    (sizes.width - (sizes.padding + sizes.sm) * 2) / 2;\r\n  const IMAGE_MARGIN = (sizes.width - IMAGE_SIZE * 3 - sizes.padding * 2) / 2;\r\n  const IMAGE_VERTICAL_MARGIN =\r\n    (sizes.width - (IMAGE_VERTICAL_SIZE + sizes.sm) * 2) / 2;\r\n\r\n  const title = activity ? activity.title : '';\r\n  const description = activity ? activity.description : '';\r\n  const time = activity ? activity.date : '';\r\n\r\n  const onPressJoin = () => {\r\n    const userId = '627659c91fbdd7e2c67d5e11';\r\n    fetch(BASE_URL + 'getUser?user_id=' + userId, {\r\n      method: 'GET'\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setUser(responseJson);\r\n      })\r\n      .then(() => {\r\n        let updatedParticipants: string[] = activity.participants ? activity.participants : [];\r\n        updatedParticipants.push(userId);\r\n        fetch(BASE_URL + 'updateActivityParticipants?activity_id=' + activity._id + '&participants=' + encodeURIComponent(JSON.stringify(updatedParticipants)), {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n          },\r\n        })\r\n      })\r\n      .then(() => {\r\n        setModal(true);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error + \" detected\");\r\n      });\r\n  }\r\n  return (\r\n    <Block safe>\r\n      <Block\r\n        scroll\r\n        paddingHorizontal={sizes.s}\r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={{ paddingBottom: sizes.padding }}>\r\n        <Block flex={0} paddingTop={sizes.l} paddingBottom={sizes.l}>\r\n          <Image\r\n            background\r\n            resizeMode=\"cover\"\r\n            padding={sizes.sm}\r\n            paddingBottom={sizes.l}\r\n            radius={sizes.cardRadius}\r\n            source={assets.background}>\r\n            <Block flex={0} align=\"center\">\r\n              <Text h5 center white size={24} marginTop={sizes.sm}>\r\n                {title}\r\n              </Text>\r\n              <Text p center white marginBottom={sizes.md}>\r\n              {description}\r\n              </Text>\r\n            </Block>\r\n          </Image>\r\n\r\n          <Block\r\n            flex={0}\r\n            radius={sizes.sm}\r\n            shadow={!isAndroid} // disabled shadow on Android due to blur overlay + elevation issue\r\n            marginTop={-sizes.l}\r\n            marginHorizontal=\"8%\"\r\n            color=\"rgba(255,255,255,0.2)\">\r\n            <Block\r\n              row\r\n              blur\r\n              flex={0}\r\n              intensity={100}\r\n              radius={sizes.sm}\r\n              overflow=\"hidden\"\r\n              tint={colors.blurTint}\r\n              justify=\"space-evenly\"\r\n              paddingVertical={sizes.sm}\r\n              renderToHardwareTextureAndroid>\r\n              <Block align=\"center\">\r\n                <Text h5>0</Text>\r\n                <Text>{t('activity.going')}</Text>\r\n              </Block>\r\n              <Block align=\"center\">\r\n                <Text h5>0</Text>\r\n                <Text>{t('activity.left')}</Text>\r\n              </Block>\r\n              <Block align=\"center\">\r\n                <Text h5>0</Text>\r\n                <Text>{t('activity.inTotal')}</Text>\r\n              </Block>\r\n            </Block>\r\n          </Block>\r\n          <Block align=\"center\">\r\n            <Button light marginBottom={sizes.xs} marginTop={sizes.s} radius={15} paddingRight={sizes.l} paddingLeft={sizes.l} onPress={() => {onPressJoin()}}>\r\n              <Text bold transform=\"uppercase\">\r\n                {t('activity.join')}\r\n              </Text>\r\n            </Button>\r\n          </Block>\r\n          \r\n\r\n          <Block paddingHorizontal={sizes.sm} marginTop={sizes.sm}>\r\n            <Block row align=\"center\" justify=\"space-between\" marginBottom={sizes.l}>\r\n              <Text h5 semibold>\r\n                {t('activity.time')}\r\n              </Text>\r\n              <Text p secondary semibold>\r\n                placeholder\r\n              </Text>\r\n            </Block>\r\n            <Block row align=\"center\" justify=\"space-between\" marginBottom={sizes.l}>\r\n              <Text h5 semibold>\r\n                {t('activity.createdBy')}\r\n              </Text>\r\n              <Text p secondary semibold>\r\n                placeholder\r\n              </Text>\r\n            </Block>\r\n            <Block row align=\"center\" justify=\"space-between\" marginBottom={sizes.l}>\r\n              <Text h5 semibold>\r\n                {t('activity.notes')}\r\n              </Text>\r\n              <Text p secondary semibold>\r\n                placeholder\r\n              </Text>\r\n            </Block>\r\n            <Block row marginBottom={sizes.l}>\r\n              <Checkbox checked={isChecked} onPress={() => setIsChecked(!isChecked)} />\r\n              <Text p marginLeft={sizes.sm}>\r\n                I want to be a manager\r\n              </Text>\r\n            </Block>\r\n          </Block>\r\n        </Block>\r\n      </Block>\r\n      <Modal visible={showModal} onRequestClose={() => setModal(false)} >\r\n            <Text h3 white marginBottom={sizes.xl} center>{t('activity.joined')}</Text>\r\n          </Modal>\r\n    </Block>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n"]},"metadata":{},"sourceType":"module"}