{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { CardStyleInterpolators } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { DrawerActions } from '@react-navigation/native';\nimport { useData } from \"./useData\";\nimport { useTranslation } from \"./useTranslation\";\nimport Image from \"../components/Image\";\nimport Text from \"../components/Text\";\nimport useTheme from \"../hooks/useTheme\";\nimport Button from \"../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (function () {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useData = useData(),\n      user = _useData.user;\n\n  var navigation = useNavigation();\n\n  var _useTheme = useTheme(),\n      icons = _useTheme.icons,\n      colors = _useTheme.colors,\n      gradients = _useTheme.gradients,\n      sizes = _useTheme.sizes;\n\n  var menu = {\n    headerStyle: {\n      elevation: 0\n    },\n    headerTitleAlign: 'left',\n    headerTitleContainerStyle: {\n      marginLeft: -sizes.sm\n    },\n    headerLeftContainerStyle: {\n      paddingLeft: sizes.s\n    },\n    headerRightContainerStyle: {\n      paddingRight: sizes.s\n    },\n    cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\n    headerTitle: function headerTitle(_ref) {\n      var children = _ref.children;\n      return _jsx(Text, {\n        p: true,\n        children: children\n      });\n    },\n    headerLeft: function headerLeft() {\n      return _jsx(Button, {\n        onPress: function onPress() {\n          return navigation.dispatch(DrawerActions.toggleDrawer());\n        },\n        children: _jsx(Image, {\n          source: icons.menu,\n          radius: 0,\n          color: colors.icon\n        })\n      });\n    }\n  };\n  var options = {\n    stack: menu,\n    components: _objectSpread(_objectSpread({}, menu), {}, {\n      headerTitle: function headerTitle() {\n        return _jsx(Text, {\n          p: true,\n          white: true,\n          children: t('navigation.components')\n        });\n      },\n      headerRight: function headerRight() {\n        return null;\n      },\n      headerLeft: function headerLeft() {\n        return _jsx(Button, {\n          onPress: function onPress() {\n            return navigation.dispatch(DrawerActions.toggleDrawer());\n          },\n          children: _jsx(Image, {\n            source: icons.menu,\n            radius: 0,\n            color: colors.white\n          })\n        });\n      }\n    }),\n    back: _objectSpread(_objectSpread({}, menu), {}, {\n      headerRight: function headerRight() {\n        return null;\n      },\n      headerLeft: function headerLeft() {\n        return _jsx(Button, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Image, {\n            radius: 0,\n            width: 10,\n            height: 18,\n            color: colors.icon,\n            source: icons.arrow,\n            transform: [{\n              rotate: '180deg'\n            }]\n          })\n        });\n      }\n    })\n  };\n  return options;\n});","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/hooks/useScreenOptions.tsx"],"names":["React","CardStyleInterpolators","useNavigation","DrawerActions","useData","useTranslation","Image","Text","useTheme","Button","t","user","navigation","icons","colors","gradients","sizes","menu","headerStyle","elevation","headerTitleAlign","headerTitleContainerStyle","marginLeft","sm","headerLeftContainerStyle","paddingLeft","s","headerRightContainerStyle","paddingRight","cardStyleInterpolator","forHorizontalIOS","headerTitle","children","headerLeft","dispatch","toggleDrawer","icon","options","stack","components","headerRight","white","back","goBack","arrow","rotate"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {TouchableOpacity} from 'react-native';\r\nimport {\r\n  StackHeaderTitleProps,\r\n  CardStyleInterpolators,\r\n} from '@react-navigation/stack';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {DrawerActions} from '@react-navigation/native';\r\nimport {StackHeaderOptions} from '@react-navigation/stack/lib/typescript/src/types';\r\n\r\nimport {useData} from './useData';\r\nimport {useTranslation} from './useTranslation';\r\n\r\nimport Image from '../components/Image';\r\nimport Text from '../components/Text';\r\nimport useTheme from '../hooks/useTheme';\r\nimport Button from '../components/Button';\r\nimport Block from '../components/Block';\r\n\r\nexport default () => {\r\n  const {t} = useTranslation();\r\n  const {user} = useData();\r\n  const navigation = useNavigation();\r\n  const {icons, colors, gradients, sizes} = useTheme();\r\n\r\n  const menu = {\r\n    headerStyle: {elevation: 0},\r\n    headerTitleAlign: 'left',\r\n    headerTitleContainerStyle: {marginLeft: -sizes.sm},\r\n    headerLeftContainerStyle: {paddingLeft: sizes.s},\r\n    headerRightContainerStyle: {paddingRight: sizes.s},\r\n    cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\r\n    headerTitle: ({children}: StackHeaderTitleProps) => (\r\n      <Text p>{children}</Text>\r\n    ),\r\n    headerLeft: () => (\r\n      <Button onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}>\r\n        <Image source={icons.menu} radius={0} color={colors.icon} />\r\n      </Button>\r\n    ),\r\n  } as StackHeaderOptions;\r\n\r\n  const options = {\r\n    stack: menu,\r\n    components: {\r\n      ...menu,\r\n      headerTitle: () => (\r\n        <Text p white>\r\n          {t('navigation.components')}\r\n        </Text>\r\n      ),\r\n      headerRight: () => null,\r\n      headerLeft: () => (\r\n        <Button\r\n          onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}>\r\n          <Image source={icons.menu} radius={0} color={colors.white} />\r\n        </Button>\r\n      ),\r\n    },\r\n    back: {\r\n      ...menu,\r\n      headerRight: () => null,\r\n      headerLeft: () => (\r\n        <Button onPress={() => navigation.goBack()}>\r\n          <Image\r\n            radius={0}\r\n            width={10}\r\n            height={18}\r\n            color={colors.icon}\r\n            source={icons.arrow}\r\n            transform={[{rotate: '180deg'}]}\r\n          />\r\n        </Button>\r\n      ),\r\n    },\r\n  };\r\n\r\n  return options;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}