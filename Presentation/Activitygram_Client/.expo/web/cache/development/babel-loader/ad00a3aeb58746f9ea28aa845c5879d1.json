{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BigList from \"react-native-big-list\";\nimport { Checkbox } from \"react-native-paper\";\nimport data from \"../data/eventList.json\";\n\nvar SelectList = function SelectList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var onSelect = function onSelect(value, isSelected) {\n    if (!isSelected) {\n      var selectedIndex = selected.indexOf(value);\n\n      var newSelectedItems = _toConsumableArray(selected);\n\n      newSelectedItems.splice(selectedIndex, 1);\n      setSelected(newSelectedItems);\n    } else {\n      setSelected([].concat(_toConsumableArray(selected), [value]));\n    }\n\n    console.log(\"The value\", value, \"is \" + (isSelected ? \"selected\" : \"unselected\"));\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(Checkbox.Item, {\n      mode: \"ios\",\n      label: item.title,\n      status: selected.includes(item.id) ? \"checked\" : \"unchecked\",\n      onPress: function onPress() {\n        onSelect(item.id, !selected.includes(item.id));\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.container\n  }, React.createElement(BigList, {\n    data: data,\n    renderItem: renderItem,\n    rowHeight: 50\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default SelectList;","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/screens/eventList/lists/MultiSelectList.jsx"],"names":["React","useState","BigList","Checkbox","data","SelectList","selected","setSelected","onSelect","value","isSelected","selectedIndex","indexOf","newSelectedItems","splice","console","log","renderItem","item","title","includes","id","styles","container","StyleSheet","create","flex"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,IAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,UAAR,EAAuB;AACtC,QAAI,CAACA,UAAL,EAAiB;AACf,UAAMC,aAAa,GAAGL,QAAQ,CAACM,OAAT,CAAiBH,KAAjB,CAAtB;;AACA,UAAMI,gBAAgB,sBAAOP,QAAP,CAAtB;;AACAO,MAAAA,gBAAgB,CAACC,MAAjB,CAAwBH,aAAxB,EAAuC,CAAvC;AACAJ,MAAAA,WAAW,CAACM,gBAAD,CAAX;AACD,KALD,MAKO;AACLN,MAAAA,WAAW,8BAAKD,QAAL,IAAeG,KAAf,GAAX;AACD;;AAIDM,IAAAA,OAAO,CAACC,GAAR,CACE,WADF,EAEEP,KAFF,EAGE,SAASC,UAAU,GAAG,UAAH,GAAgB,YAAnC,CAHF;AAKD,GAjBD;;AAmBA,MAAMO,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC/B,WACE,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,KAAK,EAAEA,IAAI,CAACC,KAFd;AAGE,MAAA,MAAM,EAAEb,QAAQ,CAACc,QAAT,CAAkBF,IAAI,CAACG,EAAvB,IAA6B,SAA7B,GAAyC,WAHnD;AAIE,MAAA,OAAO,EAAE,mBAAM;AACbb,QAAAA,QAAQ,CAACU,IAAI,CAACG,EAAN,EAAU,CAACf,QAAQ,CAACc,QAAT,CAAkBF,IAAI,CAACG,EAAvB,CAAX,CAAR;AACD;AANH,MADF;AAUD,GAXD;;AAaA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC;AAA5B,KACE,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAED,MAAM,CAACC;AAApC,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEnB,IAAf;AAAqB,IAAA,UAAU,EAAEa,UAAjC;AAA6C,IAAA,SAAS,EAAE;AAAxD,IADF,CADF,CADF;AAOD,CA1CD;;AA4CA,IAAMK,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf;AAMA,eAAerB,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport BigList from \"react-native-big-list\";\r\nimport { Checkbox } from \"react-native-paper\";\r\n\r\nimport data from \"../data/eventList.json\";\r\n\r\nconst SelectList = () => {\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const onSelect = (value, isSelected) => {\r\n    if (!isSelected) {\r\n      const selectedIndex = selected.indexOf(value);\r\n      const newSelectedItems = [...selected];\r\n      newSelectedItems.splice(selectedIndex, 1);\r\n      setSelected(newSelectedItems);\r\n    } else {\r\n      setSelected([...selected, value]);\r\n    }\r\n\r\n    // TODO: your logics\r\n\r\n    console.log(\r\n      \"The value\",\r\n      value,\r\n      \"is \" + (isSelected ? \"selected\" : \"unselected\"),\r\n    );\r\n  };\r\n\r\n  const renderItem = ({ item }) => {\r\n    return (\r\n      <Checkbox.Item\r\n        mode=\"ios\"\r\n        label={item.title}\r\n        status={selected.includes(item.id) ? \"checked\" : \"unchecked\"}\r\n        onPress={() => {\r\n          onSelect(item.id, !selected.includes(item.id));\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <KeyboardAvoidingView style={styles.container}>\r\n        <BigList data={data} renderItem={renderItem} rowHeight={50} />\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default SelectList;"]},"metadata":{},"sourceType":"module"}