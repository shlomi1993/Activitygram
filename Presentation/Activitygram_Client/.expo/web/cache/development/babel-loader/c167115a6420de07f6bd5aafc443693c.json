{"ast":null,"code":"import React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Avatar } from 'react-native-elements';\nimport PropTypes from 'prop-types';\nimport { datetime } from \"../../utils\";\nvar styles = StyleSheet.create({\n  container: {\n    borderWidth: 0,\n    justifyContent: 'space-between',\n    marginBottom: 5,\n    marginLeft: 12,\n    marginRight: 12,\n    marginTop: 10,\n    padding: 0\n  },\n  date: {\n    color: 'gray',\n    fontSize: 12.5\n  },\n  postRow: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingBottom: 6,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 6,\n    width: Dimensions.get('window').width * 1\n  },\n  postImage: {\n    backgroundColor: 'rgba(0, 0, 0, 0.075)',\n    height: 200\n  },\n  userImage: {\n    marginRight: 12\n  },\n  wordRow: {\n    marginBottom: 10,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 6\n  },\n  wordText: {\n    fontSize: 14,\n    fontWeight: '500',\n    lineHeight: 22\n  }\n});\n\nvar Post = function Post(_ref) {\n  var containerStyle = _ref.containerStyle,\n      user = _ref.user,\n      image = _ref.image,\n      createdDate = _ref.createdDate,\n      sentences = _ref.sentences;\n  return React.createElement(View, {\n    style: [styles.container, containerStyle]\n  }, React.createElement(View, {\n    style: styles.postRow\n  }, React.createElement(View, {\n    style: styles.userImage\n  }, React.createElement(Avatar, {\n    rounded: true,\n    size: \"medium\",\n    source: {\n      uri: user.avatar\n    }\n  })), React.createElement(View, null, React.createElement(Text, null, user.name), React.createElement(Text, {\n    style: styles.date\n  }, datetime.timeDifferenceForDate(createdDate)))), React.createElement(View, {\n    style: styles.wordRow\n  }, React.createElement(Text, {\n    style: styles.wordText\n  }, sentences)), image && React.createElement(Image, {\n    style: styles.postImage,\n    source: {\n      uri: image\n    }\n  }));\n};\n\nPost.propTypes = {\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  image: PropTypes.string,\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired\n  }).isRequired,\n  createdDate: PropTypes.string.isRequired,\n  sentences: PropTypes.string.isRequired\n};\nPost.defaultProps = {\n  containerStyle: {},\n  image: null\n};\nexport default Post;","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/screens/profile/Post.js"],"names":["React","Avatar","PropTypes","datetime","styles","StyleSheet","create","container","borderWidth","justifyContent","marginBottom","marginLeft","marginRight","marginTop","padding","date","color","fontSize","postRow","alignItems","flexDirection","paddingBottom","paddingLeft","paddingRight","paddingTop","width","Dimensions","get","postImage","backgroundColor","height","userImage","wordRow","wordText","fontWeight","lineHeight","Post","containerStyle","user","image","createdDate","sentences","uri","avatar","name","timeDifferenceForDate","propTypes","oneOfType","object","number","string","shape","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Dimensions, Image, View, Text, StyleSheet } from 'react-native'\r\nimport { Avatar } from 'react-native-elements'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { datetime } from '../../utils'\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderWidth: 0,\r\n    justifyContent: 'space-between',\r\n    marginBottom: 5,\r\n    marginLeft: 12,\r\n    marginRight: 12,\r\n    marginTop: 10,\r\n    padding: 0,\r\n  },\r\n  date: {\r\n    color: 'gray',\r\n    fontSize: 12.5,\r\n  },\r\n  postRow: {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    paddingBottom: 6,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    paddingTop: 6,\r\n    width: Dimensions.get('window').width * 1,\r\n  },\r\n  postImage: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.075)',\r\n    height: 200,\r\n  },\r\n  userImage: {\r\n    marginRight: 12,\r\n  },\r\n  wordRow: {\r\n    marginBottom: 10,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    paddingTop: 6,\r\n  },\r\n  wordText: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    lineHeight: 22,\r\n  },\r\n})\r\n\r\nconst Post = ({ containerStyle, user, image, createdDate, sentences }) => (\r\n  <View style={[styles.container, containerStyle]}>\r\n    <View style={styles.postRow}>\r\n      <View style={styles.userImage}>\r\n        <Avatar\r\n          rounded\r\n          size=\"medium\"\r\n          source={{\r\n            uri: user.avatar,\r\n          }}\r\n        />\r\n      </View>\r\n      <View>\r\n        <Text>{user.name}</Text>\r\n        <Text style={styles.date}>\r\n          {datetime.timeDifferenceForDate(createdDate)}\r\n        </Text>\r\n      </View>\r\n    </View>\r\n    <View style={styles.wordRow}>\r\n      <Text style={styles.wordText}>{sentences}</Text>\r\n    </View>\r\n    {image && <Image style={styles.postImage} source={{uri: image}} />}\r\n  </View>\r\n)\r\n\r\nPost.propTypes = {\r\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n  image: PropTypes.string,\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  createdDate: PropTypes.string.isRequired,\r\n  sentences: PropTypes.string.isRequired,\r\n}\r\n\r\nPost.defaultProps = {\r\n  containerStyle: {},\r\n  image: null,\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}