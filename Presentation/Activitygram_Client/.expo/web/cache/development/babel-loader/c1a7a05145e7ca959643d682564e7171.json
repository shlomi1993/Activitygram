{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useData, useTheme, useTranslation } from \"../hooks\";\nimport { Block, Button, Image, Text } from \"../components\";\nimport 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar isAndroid = Platform.OS === 'android';\n\nvar ActivityCreatedSuccessfully = function ActivityCreatedSuccessfully() {\n  var _useTheme = useTheme(),\n      assets = _useTheme.assets,\n      sizes = _useTheme.sizes,\n      colors = _useTheme.colors;\n\n  var navigation = useNavigation();\n  var headerHeight = useHeaderHeight();\n\n  var _useData = useData(),\n      user = _useData.user;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isChecked = _useState2[0],\n      setIsChecked = _useState2[1];\n\n  return _jsxs(Block, {\n    safe: true,\n    children: [_jsx(Image, {\n      source: assets.success,\n      width: 280,\n      height: 280,\n      marginLeft: sizes.xxl,\n      marginTop: sizes.m\n    }), _jsx(Text, {\n      h2: true,\n      center: true,\n      marginTop: sizes.xl,\n      children: \"Activity Created Successfully!\"\n    }), _jsx(Button, {\n      children: _jsxs(Block, {\n        row: true,\n        marginTop: sizes.sm,\n        children: [_jsx(Image, {\n          radius: 0,\n          width: 10,\n          height: 15,\n          color: colors.black,\n          source: assets.arrow,\n          transform: [{\n            rotate: '180deg'\n          }],\n          marginTop: sizes.xs\n        }), _jsx(Text, {\n          h5: true,\n          semibold: true,\n          marginLeft: sizes.s,\n          children: \"Show Activity \"\n        })]\n      })\n    })]\n  });\n};\n\nexport default ActivityCreatedSuccessfully;","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/screens/ActivityCreatedSuccessfully.tsx"],"names":["React","useState","useNavigation","useHeaderHeight","useData","useTheme","useTranslation","Block","Button","Image","Text","isAndroid","Platform","OS","ActivityCreatedSuccessfully","assets","sizes","colors","navigation","headerHeight","user","t","isChecked","setIsChecked","success","xxl","m","xl","sm","black","arrow","rotate","xs","s"],"mappings":";AAAA,OAAOA,KAAP,IAAgCC,QAAhC,QAA6D,OAA7D;;AAGA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AAEA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,cAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,IAA/B;AACA,OAAO,8BAAP;;;AAEA,IAAMC,SAAS,GAAGC,QAAQ,CAACC,EAAT,KAAgB,SAAlC;;AAEA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAM;AACxC,kBAAiCT,QAAQ,EAAzC;AAAA,MAAOU,MAAP,aAAOA,MAAP;AAAA,MAAeC,KAAf,aAAeA,KAAf;AAAA,MAAsBC,MAAtB,aAAsBA,MAAtB;;AACA,MAAMC,UAAU,GAAGhB,aAAa,EAAhC;AACA,MAAMiB,YAAY,GAAGhB,eAAe,EAApC;;AACA,iBAAeC,OAAO,EAAtB;AAAA,MAAOgB,IAAP,YAAOA,IAAP;;AACA,wBAAYd,cAAc,EAA1B;AAAA,MAAOe,CAAP,mBAAOA,CAAP;;AACA,kBAAkCpB,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOqB,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,SACE,MAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAA,eACI,KAAC,KAAD;AAAO,MAAA,MAAM,EAAER,MAAM,CAACS,OAAtB;AAA+B,MAAA,KAAK,EAAE,GAAtC;AAA2C,MAAA,MAAM,EAAE,GAAnD;AAAwD,MAAA,UAAU,EAAER,KAAK,CAACS,GAA1E;AAA+E,MAAA,SAAS,EAAET,KAAK,CAACU;AAAhG,MADJ,EAEI,KAAC,IAAD;AAAM,MAAA,EAAE,MAAR;AAAS,MAAA,MAAM,MAAf;AAAgB,MAAA,SAAS,EAAEV,KAAK,CAACW,EAAjC;AAAA;AAAA,MAFJ,EAKI,KAAC,MAAD;AAAA,gBACA,MAAC,KAAD;AAAO,QAAA,GAAG,MAAV;AAAW,QAAA,SAAS,EAAEX,KAAK,CAACY,EAA5B;AAAA,mBACA,KAAC,KAAD;AACI,UAAA,MAAM,EAAE,CADZ;AAEI,UAAA,KAAK,EAAE,EAFX;AAGI,UAAA,MAAM,EAAE,EAHZ;AAII,UAAA,KAAK,EAAEX,MAAM,CAACY,KAJlB;AAKI,UAAA,MAAM,EAAEd,MAAM,CAACe,KALnB;AAMI,UAAA,SAAS,EAAE,CAAC;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAD,CANf;AAOI,UAAA,SAAS,EAAEf,KAAK,CAACgB;AAPrB,UADA,EAUA,KAAC,IAAD;AAAM,UAAA,EAAE,MAAR;AAAS,UAAA,QAAQ,MAAjB;AAAkB,UAAA,UAAU,EAAEhB,KAAK,CAACiB,CAApC;AAAA;AAAA,UAVA;AAAA;AADA,MALJ;AAAA,IADF;AAsBD,CA9BD;;AAgCA,eAAenB,2BAAf","sourcesContent":["import React, {useLayoutEffect, useState, useCallback } from 'react';\r\nimport {Platform, Linking} from 'react-native';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {useHeaderHeight} from '@react-navigation/stack';\r\n\r\nimport { useData, useTheme, useTranslation } from '../hooks';\r\nimport { Block, Button, Image, Text, Checkbox } from '../components';\r\nimport 'react-native-gesture-handler';\r\n\r\nconst isAndroid = Platform.OS === 'android';\r\n\r\nconst ActivityCreatedSuccessfully = () => {\r\n  const {assets, sizes, colors } = useTheme();\r\n  const navigation = useNavigation();\r\n  const headerHeight = useHeaderHeight();\r\n  const {user} = useData();\r\n  const {t} = useTranslation();\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  return (\r\n    <Block safe>\r\n        <Image source={assets.success} width={280} height={280} marginLeft={sizes.xxl} marginTop={sizes.m}></Image>\r\n        <Text h2 center marginTop={sizes.xl} >\r\n            Activity Created Successfully!\r\n        </Text>\r\n        <Button>\r\n        <Block row marginTop={sizes.sm}>\r\n        <Image\r\n            radius={0}\r\n            width={10}\r\n            height={15}\r\n            color={colors.black}\r\n            source={assets.arrow}\r\n            transform={[{rotate: '180deg'}]}\r\n            marginTop={sizes.xs}\r\n        />\r\n        <Text h5 semibold marginLeft={sizes.s}>Show Activity </Text>\r\n        </Block>\r\n        </Button>\r\n    </Block>\r\n  );\r\n};\r\n\r\nexport default ActivityCreatedSuccessfully;\r\n"]},"metadata":{},"sourceType":"module"}