{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"children\", \"style\", \"shadow\", \"card\", \"center\", \"outlined\", \"overflow\", \"row\", \"safe\", \"keyboard\", \"scroll\", \"color\", \"gradient\", \"primary\", \"secondary\", \"tertiary\", \"black\", \"white\", \"gray\", \"danger\", \"warning\", \"success\", \"info\", \"radius\", \"height\", \"width\", \"margin\", \"marginBottom\", \"marginTop\", \"marginHorizontal\", \"marginVertical\", \"marginRight\", \"marginLeft\", \"padding\", \"paddingBottom\", \"paddingTop\", \"paddingHorizontal\", \"paddingVertical\", \"paddingRight\", \"paddingLeft\", \"justify\", \"align\", \"flex\", \"wrap\", \"blur\", \"intensity\", \"tint\", \"position\", \"right\", \"left\", \"top\", \"bottom\", \"end\", \"start\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BlurView } from 'expo-blur';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport useTheme from \"../hooks/useTheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Block = function Block(props) {\n  var _props$id = props.id,\n      id = _props$id === void 0 ? 'Block' : _props$id,\n      children = props.children,\n      style = props.style,\n      shadow = props.shadow,\n      card = props.card,\n      center = props.center,\n      outlined = props.outlined,\n      overflow = props.overflow,\n      row = props.row,\n      safe = props.safe,\n      keyboard = props.keyboard,\n      scroll = props.scroll,\n      color = props.color,\n      gradient = props.gradient,\n      primary = props.primary,\n      secondary = props.secondary,\n      tertiary = props.tertiary,\n      black = props.black,\n      white = props.white,\n      gray = props.gray,\n      danger = props.danger,\n      warning = props.warning,\n      success = props.success,\n      info = props.info,\n      radius = props.radius,\n      height = props.height,\n      width = props.width,\n      margin = props.margin,\n      marginBottom = props.marginBottom,\n      marginTop = props.marginTop,\n      marginHorizontal = props.marginHorizontal,\n      marginVertical = props.marginVertical,\n      marginRight = props.marginRight,\n      marginLeft = props.marginLeft,\n      padding = props.padding,\n      paddingBottom = props.paddingBottom,\n      paddingTop = props.paddingTop,\n      paddingHorizontal = props.paddingHorizontal,\n      paddingVertical = props.paddingVertical,\n      paddingRight = props.paddingRight,\n      paddingLeft = props.paddingLeft,\n      justify = props.justify,\n      align = props.align,\n      _props$flex = props.flex,\n      flex = _props$flex === void 0 ? 1 : _props$flex,\n      wrap = props.wrap,\n      blur = props.blur,\n      intensity = props.intensity,\n      tint = props.tint,\n      position = props.position,\n      right = props.right,\n      left = props.left,\n      top = props.top,\n      bottom = props.bottom,\n      end = props.end,\n      start = props.start,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes;\n\n  var colorIndex = primary ? 'primary' : secondary ? 'secondary' : tertiary ? 'tertiary' : black ? 'black' : white ? 'white' : gray ? 'gray' : danger ? 'danger' : warning ? 'warning' : success ? 'success' : info ? 'info' : null;\n  var blockColor = color ? color : colorIndex ? colors == null ? void 0 : colors[colorIndex] : undefined;\n  var blockStyles = StyleSheet.flatten([style, _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, shadow && {\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: sizes.shadowOffsetWidth,\n      height: sizes.shadowOffsetHeight\n    },\n    shadowOpacity: sizes.shadowOpacity,\n    shadowRadius: sizes.shadowRadius,\n    elevation: sizes.elevation\n  }), card && {\n    backgroundColor: colors.card,\n    borderRadius: sizes.cardRadius,\n    padding: sizes.cardPadding,\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: sizes.shadowOffsetWidth,\n      height: sizes.shadowOffsetHeight\n    },\n    shadowOpacity: sizes.shadowOpacity,\n    shadowRadius: sizes.shadowRadius,\n    elevation: sizes.elevation\n  }), margin !== undefined && {\n    margin: margin\n  }), marginBottom && {\n    marginBottom: marginBottom\n  }), marginTop && {\n    marginTop: marginTop\n  }), marginHorizontal && {\n    marginHorizontal: marginHorizontal\n  }), marginVertical && {\n    marginVertical: marginVertical\n  }), marginRight && {\n    marginRight: marginRight\n  }), marginLeft && {\n    marginLeft: marginLeft\n  }), padding !== undefined && {\n    padding: padding\n  }), paddingBottom && {\n    paddingBottom: paddingBottom\n  }), paddingTop && {\n    paddingTop: paddingTop\n  }), paddingHorizontal && {\n    paddingHorizontal: paddingHorizontal\n  }), paddingVertical && {\n    paddingVertical: paddingVertical\n  }), paddingRight && {\n    paddingRight: paddingRight\n  }), paddingLeft && {\n    paddingLeft: paddingLeft\n  }), radius && {\n    borderRadius: radius\n  }), height && {\n    height: height\n  }), width && {\n    width: width\n  }), overflow && {\n    overflow: overflow\n  }), flex !== undefined && {\n    flex: flex\n  }), row && {\n    flexDirection: 'row'\n  }), align && {\n    alignItems: align\n  }), center && {\n    justifyContent: 'center'\n  }), justify && {\n    justifyContent: justify\n  }), wrap && {\n    flexWrap: wrap\n  }), blockColor && {\n    backgroundColor: blockColor\n  }), outlined && {\n    borderWidth: 1,\n    borderColor: blockColor,\n    backgroundColor: 'transparent'\n  }), position && {\n    position: position\n  }), right !== undefined && {\n    right: right\n  }), left !== undefined && {\n    left: left\n  }), top !== undefined && {\n    top: top\n  }), bottom !== undefined && {\n    bottom: bottom\n  })]);\n  var blockID = Platform.OS === 'android' ? {\n    accessibilityLabel: id\n  } : {\n    testID: id\n  };\n\n  if (safe) {\n    return _jsx(SafeAreaView, _objectSpread(_objectSpread(_objectSpread({}, blockID), rest), {}, {\n      style: blockStyles,\n      children: children\n    }));\n  }\n\n  if (keyboard) {\n    return _jsx(KeyboardAwareScrollView, _objectSpread(_objectSpread(_objectSpread({}, blockID), rest), {}, {\n      style: blockStyles,\n      children: children\n    }));\n  }\n\n  if (scroll) {\n    return _jsx(ScrollView, _objectSpread(_objectSpread(_objectSpread({}, blockID), rest), {}, {\n      style: blockStyles,\n      children: children\n    }));\n  }\n\n  if (gradient) {\n    return _jsx(LinearGradient, _objectSpread(_objectSpread(_objectSpread({}, blockID), {}, {\n      colors: gradient,\n      style: blockStyles,\n      end: end || [1, 0],\n      start: start || [0, 0]\n    }, rest), {}, {\n      children: children\n    }));\n  }\n\n  if (blur) {\n    return _jsx(BlurView, _objectSpread(_objectSpread({}, blockID), {}, {\n      tint: tint,\n      intensity: intensity,\n      style: blockStyles,\n      children: children\n    }));\n  }\n\n  return _jsx(View, _objectSpread(_objectSpread(_objectSpread({}, blockID), rest), {}, {\n    style: blockStyles,\n    children: children\n  }));\n};\n\nexport default React.memo(Block);","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/components/Block.tsx"],"names":["React","BlurView","LinearGradient","KeyboardAwareScrollView","useTheme","Block","props","id","children","style","shadow","card","center","outlined","overflow","row","safe","keyboard","scroll","color","gradient","primary","secondary","tertiary","black","white","gray","danger","warning","success","info","radius","height","width","margin","marginBottom","marginTop","marginHorizontal","marginVertical","marginRight","marginLeft","padding","paddingBottom","paddingTop","paddingHorizontal","paddingVertical","paddingRight","paddingLeft","justify","align","flex","wrap","blur","intensity","tint","position","right","left","top","bottom","end","start","rest","colors","sizes","colorIndex","blockColor","undefined","blockStyles","StyleSheet","flatten","shadowColor","shadowOffset","shadowOffsetWidth","shadowOffsetHeight","shadowOpacity","shadowRadius","elevation","backgroundColor","borderRadius","cardRadius","cardPadding","flexDirection","alignItems","justifyContent","flexWrap","borderWidth","borderColor","blockID","Platform","OS","accessibilityLabel","testID","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Platform,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  StyleSheet,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\nimport {BlurView} from 'expo-blur';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scroll-view';\r\n\r\nimport useTheme from '../hooks/useTheme';\r\nimport {IBlockProps} from '../constants/types';\r\n\r\nconst Block = (props: IBlockProps) => {\r\n  const {\r\n  id = 'Block',\r\n    children,\r\n    style,\r\n    shadow,\r\n    card,\r\n    center,\r\n    outlined,\r\n    overflow,\r\n    row,\r\n    safe,\r\n    keyboard,\r\n    scroll,\r\n    color,\r\n    gradient,\r\n    primary,\r\n    secondary,\r\n    tertiary,\r\n    black,\r\n    white,\r\n    gray,\r\n    danger,\r\n    warning,\r\n    success,\r\n    info,\r\n    radius,\r\n    height,\r\n    width,\r\n    margin,\r\n    marginBottom,\r\n    marginTop,\r\n    marginHorizontal,\r\n    marginVertical,\r\n    marginRight,\r\n    marginLeft,\r\n    padding,\r\n    paddingBottom,\r\n    paddingTop,\r\n    paddingHorizontal,\r\n    paddingVertical,\r\n    paddingRight,\r\n    paddingLeft,\r\n    justify,\r\n    align,\r\n    flex = 1,\r\n    wrap,\r\n    blur,\r\n    intensity,\r\n    tint,\r\n    position,\r\n    right,\r\n    left,\r\n    top,\r\n    bottom,\r\n    end,\r\n    start,\r\n    ...rest\r\n  } = props;\r\n  const {colors, sizes} = useTheme();\r\n\r\n  const colorIndex = primary\r\n    ? 'primary'\r\n    : secondary\r\n    ? 'secondary'\r\n    : tertiary\r\n    ? 'tertiary'\r\n    : black\r\n    ? 'black'\r\n    : white\r\n    ? 'white'\r\n    : gray\r\n    ? 'gray'\r\n    : danger\r\n    ? 'danger'\r\n    : warning\r\n    ? 'warning'\r\n    : success\r\n    ? 'success'\r\n    : info\r\n    ? 'info'\r\n    : null;\r\n\r\n  const blockColor = color\r\n    ? color\r\n    : colorIndex\r\n    ? colors?.[colorIndex]\r\n    : undefined;\r\n\r\n  const blockStyles = StyleSheet.flatten([\r\n    style,\r\n    {\r\n      ...(shadow && {\r\n        shadowColor: colors.shadow,\r\n        shadowOffset: {\r\n          width: sizes.shadowOffsetWidth,\r\n          height: sizes.shadowOffsetHeight,\r\n        },\r\n        shadowOpacity: sizes.shadowOpacity,\r\n        shadowRadius: sizes.shadowRadius,\r\n        elevation: sizes.elevation,\r\n      }),\r\n      ...(card && {\r\n        backgroundColor: colors.card,\r\n        borderRadius: sizes.cardRadius,\r\n        padding: sizes.cardPadding,\r\n        shadowColor: colors.shadow,\r\n        shadowOffset: {\r\n          width: sizes.shadowOffsetWidth,\r\n          height: sizes.shadowOffsetHeight,\r\n        },\r\n        shadowOpacity: sizes.shadowOpacity,\r\n        shadowRadius: sizes.shadowRadius,\r\n        elevation: sizes.elevation,\r\n      }),\r\n      ...(margin !== undefined && {margin}),\r\n      ...(marginBottom && {marginBottom}),\r\n      ...(marginTop && {marginTop}),\r\n      ...(marginHorizontal && {marginHorizontal}),\r\n      ...(marginVertical && {marginVertical}),\r\n      ...(marginRight && {marginRight}),\r\n      ...(marginLeft && {marginLeft}),\r\n      ...(padding !== undefined && {padding}),\r\n      ...(paddingBottom && {paddingBottom}),\r\n      ...(paddingTop && {paddingTop}),\r\n      ...(paddingHorizontal && {paddingHorizontal}),\r\n      ...(paddingVertical && {paddingVertical}),\r\n      ...(paddingRight && {paddingRight}),\r\n      ...(paddingLeft && {paddingLeft}),\r\n      ...(radius && {borderRadius: radius}),\r\n      ...(height && {height}),\r\n      ...(width && {width}),\r\n      ...(overflow && {overflow}),\r\n      ...(flex !== undefined && {flex}),\r\n      ...(row && {flexDirection: 'row'}),\r\n      ...(align && {alignItems: align}),\r\n      ...(center && {justifyContent: 'center'}),\r\n      ...(justify && {justifyContent: justify}),\r\n      ...(wrap && {flexWrap: wrap}),\r\n      ...(blockColor && {backgroundColor: blockColor}),\r\n      ...(outlined && {\r\n        borderWidth: 1,\r\n        borderColor: blockColor,\r\n        backgroundColor: 'transparent',\r\n      }),\r\n      ...(position && {position}),\r\n      ...(right !== undefined && {right}),\r\n      ...(left !== undefined && {left}),\r\n      ...(top !== undefined && {top}),\r\n      ...(bottom !== undefined && {bottom}),\r\n    },\r\n  ]) as ViewStyle;\r\n\r\n  // generate component testID or accessibilityLabel based on Platform.OS\r\n  const blockID =\r\n    Platform.OS === 'android' ? {accessibilityLabel: id} : {testID: id};\r\n\r\n  if (safe) {\r\n    return (\r\n      <SafeAreaView {...blockID} {...rest} style={blockStyles}>\r\n        {children}\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  if (keyboard) {\r\n    return (\r\n      <KeyboardAwareScrollView {...blockID} {...rest} style={blockStyles}>\r\n        {children}\r\n      </KeyboardAwareScrollView>\r\n    );\r\n  }\r\n\r\n  if (scroll) {\r\n    return (\r\n      <ScrollView {...blockID} {...rest} style={blockStyles}>\r\n        {children}\r\n      </ScrollView>\r\n    );\r\n  }\r\n\r\n  if (gradient) {\r\n    return (\r\n      <LinearGradient\r\n        {...blockID}\r\n        colors={gradient}\r\n        style={blockStyles}\r\n        end={end || [1, 0]}\r\n        start={start || [0, 0]}\r\n        {...rest}>\r\n        {children}\r\n      </LinearGradient>\r\n    );\r\n  }\r\n\r\n  if (blur) {\r\n    return (\r\n      <BlurView\r\n        {...blockID}\r\n        tint={tint}\r\n        intensity={intensity}\r\n        style={blockStyles}>\r\n        {children}\r\n      </BlurView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View {...blockID} {...rest} style={blockStyles}>\r\n      {children}\r\n    </View>\r\n  );\r\n};\r\n\r\n// React.memo - for improving performance. \r\n// Using memo will cause React to skip rendering a component if its props have not changed\r\nexport default React.memo(Block);"]},"metadata":{},"sourceType":"module"}