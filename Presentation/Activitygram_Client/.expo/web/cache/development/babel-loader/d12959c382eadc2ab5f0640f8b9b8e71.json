{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useLayoutEffect, useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useTheme, useData } from \"../hooks\";\nimport { Block, Image, Button, BigCard, Text } from \"../components\";\nimport 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ForYou = function ForYou() {\n  var data = useData();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      articles = _useState4[0],\n      setArticles = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      categories = _useState6[0],\n      setCategories = _useState6[1];\n\n  var _useTheme = useTheme(),\n      assets = _useTheme.assets,\n      sizes = _useTheme.sizes,\n      colors = _useTheme.colors,\n      gradients = _useTheme.gradients;\n\n  var navigation = useNavigation();\n  var headerHeight = useHeaderHeight();\n  useEffect(function () {\n    setArticles(data == null ? void 0 : data.articles);\n    setCategories(data == null ? void 0 : data.categories);\n    setSelected(data == null ? void 0 : data.categories[0]);\n  }, [data.articles, data.categories]);\n  useEffect(function () {\n    var _data$categories, _data$articles;\n\n    var category = data == null ? void 0 : (_data$categories = data.categories) == null ? void 0 : _data$categories.find(function (category) {\n      return (category == null ? void 0 : category.id) === (selected == null ? void 0 : selected.id);\n    });\n    var newArticles = data == null ? void 0 : (_data$articles = data.articles) == null ? void 0 : _data$articles.filter(function (article) {\n      var _article$category;\n\n      return (article == null ? void 0 : (_article$category = article.category) == null ? void 0 : _article$category.id) === (category == null ? void 0 : category.id);\n    });\n    setArticles(newArticles);\n  }, [data, selected, setArticles]);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackground: function headerBackground() {\n        return _jsx(Image, {\n          radius: 0,\n          resizeMode: \"cover\",\n          width: sizes.width,\n          height: headerHeight,\n          source: assets.background\n        });\n      }\n    });\n  }, [assets.background, navigation, sizes.width, headerHeight]);\n  return _jsxs(Block, {\n    safe: true,\n    children: [_jsx(Block, {\n      color: colors.card,\n      row: true,\n      flex: 0,\n      paddingVertical: sizes.padding,\n      children: _jsx(Block, {\n        scroll: true,\n        horizontal: true,\n        renderToHardwareTextureAndroid: true,\n        showsHorizontalScrollIndicator: false,\n        contentOffset: {\n          x: -sizes.padding,\n          y: 0\n        },\n        children: categories == null ? void 0 : categories.map(function (category) {\n          var isSelected = (category == null ? void 0 : category.id) === (selected == null ? void 0 : selected.id);\n          return _jsx(Button, {\n            radius: sizes.m,\n            marginHorizontal: sizes.s,\n            onPress: function onPress() {\n              return setSelected(category);\n            },\n            gradient: gradients == null ? void 0 : gradients[isSelected ? 'primary' : 'light'],\n            children: _jsx(Text, {\n              p: true,\n              bold: isSelected,\n              white: isSelected,\n              black: !isSelected,\n              transform: \"capitalize\",\n              marginHorizontal: sizes.m,\n              children: category == null ? void 0 : category.name\n            })\n          }, \"category-\" + (category == null ? void 0 : category.id) + \"}\");\n        })\n      })\n    }), _jsx(FlatList, {\n      data: articles,\n      showsVerticalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + (item == null ? void 0 : item.id);\n      },\n      style: {\n        paddingHorizontal: sizes.padding\n      },\n      contentContainerStyle: {\n        paddingBottom: sizes.l\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(BigCard, _objectSpread({}, item));\n      }\n    })]\n  });\n};\n\nexport default ForYou;","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/screens/ForYou.tsx"],"names":["React","useLayoutEffect","useState","useEffect","useNavigation","useHeaderHeight","useTheme","useData","Block","Image","Button","BigCard","Text","ForYou","data","selected","setSelected","articles","setArticles","categories","setCategories","assets","sizes","colors","gradients","navigation","headerHeight","category","find","id","newArticles","filter","article","setOptions","headerBackground","width","background","card","padding","x","y","map","isSelected","m","s","name","item","paddingHorizontal","paddingBottom","l"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState, useEffect } from 'react';\r\nimport {FlatList} from 'react-native';\r\n\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {useHeaderHeight} from '@react-navigation/stack';\r\n\r\nimport {useTheme, useData } from '../hooks';\r\nimport {IBigCard, ICategory} from '../constants/types';\r\nimport {Block, Image, Button, BigCard, Text } from '../components';\r\nimport 'react-native-gesture-handler';\r\n\r\nconst ForYou = () => {\r\n  const data = useData();\r\n  const [selected, setSelected] = useState<ICategory>();\r\n  const [articles, setArticles] = useState<IBigCard[]>([]);\r\n  const [categories, setCategories] = useState<ICategory[]>([]);\r\n  const {assets, sizes, colors, gradients } = useTheme();\r\n  const navigation = useNavigation();\r\n  const headerHeight = useHeaderHeight();\r\n\r\n  useEffect(() => {\r\n    setArticles(data?.articles);\r\n    setCategories(data?.categories);\r\n    setSelected(data?.categories[0]);\r\n  }, [data.articles, data.categories]);\r\n\r\n  useEffect(() => {\r\n    const category = data?.categories?.find(\r\n      (category) => category?.id === selected?.id,\r\n    );\r\n\r\n    const newArticles = data?.articles?.filter(\r\n      (article) => article?.category?.id === category?.id,\r\n    );\r\n\r\n    setArticles(newArticles);\r\n  }, [data, selected, setArticles]);\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerBackground: () => (\r\n        <Image\r\n          radius={0}\r\n          resizeMode=\"cover\"\r\n          width={sizes.width}\r\n          height={headerHeight}\r\n          source={assets.background}\r\n        />\r\n      ),\r\n    });\r\n  }, [assets.background, navigation, sizes.width, headerHeight]);\r\n\r\n  return (\r\n    <Block safe>\r\n            {/* categories list */}\r\n            <Block color={colors.card} row flex={0} paddingVertical={sizes.padding}>\r\n        <Block\r\n          scroll\r\n          horizontal\r\n          renderToHardwareTextureAndroid\r\n          showsHorizontalScrollIndicator={false}\r\n          contentOffset={{x: -sizes.padding, y: 0}}>\r\n          {categories?.map((category) => {\r\n            const isSelected = category?.id === selected?.id;\r\n            return (\r\n              <Button\r\n                radius={sizes.m}\r\n                marginHorizontal={sizes.s}\r\n                key={`category-${category?.id}}`}\r\n                onPress={() => setSelected(category)}\r\n                gradient={gradients?.[isSelected ? 'primary' : 'light']}>\r\n                <Text\r\n                  p\r\n                  bold={isSelected}\r\n                  white={isSelected}\r\n                  black={!isSelected}\r\n                  transform=\"capitalize\"\r\n                  marginHorizontal={sizes.m}>\r\n                  {category?.name}\r\n                </Text>\r\n              </Button>\r\n            );\r\n          })}\r\n        </Block>\r\n      </Block>\r\n\r\n      {/* our data will be top 2 recommendations */}\r\n      <FlatList\r\n        data={articles}\r\n        showsVerticalScrollIndicator={false}\r\n        keyExtractor={(item) => `${item?.id}`}\r\n        style={{paddingHorizontal: sizes.padding}}\r\n        contentContainerStyle={{paddingBottom: sizes.l}}\r\n        renderItem={({item}) => <BigCard {...item} />}\r\n      />\r\n    </Block>\r\n  );\r\n};\r\n\r\nexport default ForYou;\r\n"]},"metadata":{},"sourceType":"module"}