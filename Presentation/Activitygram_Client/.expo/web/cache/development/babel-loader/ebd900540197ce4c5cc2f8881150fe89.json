{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Block from \"./Block\";\nimport Image from \"./Image\";\nimport Text from \"./Text\";\nimport { useTheme, useTranslation } from \"../hooks\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Card = function Card(_ref) {\n  var image = _ref.image,\n      _id = _ref._id,\n      title = _ref.title,\n      type = _ref.type,\n      linkLabel = _ref.linkLabel,\n      imageInRow = _ref.imageInRow;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useTheme = useTheme(),\n      assets = _useTheme.assets,\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes;\n\n  var navigation = useNavigation();\n  var isHorizontal = type !== 'vertical';\n  var num = imageInRow ? imageInRow : 2;\n  var CARD_WIDTH = (sizes.width - sizes.padding * 2 - sizes.sm) / num;\n  return _jsxs(Block, {\n    card: true,\n    flex: 0,\n    row: false,\n    marginBottom: sizes.sm,\n    width: CARD_WIDTH,\n    children: [_jsx(Image, {\n      resizeMode: \"cover\",\n      source: assets.background,\n      style: {\n        height: isHorizontal ? 114 : 110,\n        width: !isHorizontal ? '100%' : sizes.width / 2.435\n      }\n    }), _jsxs(Block, {\n      paddingTop: sizes.s,\n      justify: \"space-between\",\n      paddingLeft: isHorizontal ? sizes.sm : 0,\n      paddingBottom: isHorizontal ? sizes.s : 0,\n      children: [_jsx(Text, {\n        p: true,\n        marginBottom: sizes.s,\n        children: title\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('Activity', {\n            activityId: _id\n          });\n        },\n        children: _jsxs(Block, {\n          row: true,\n          flex: 0,\n          align: \"center\",\n          children: [_jsx(Text, {\n            p: true,\n            color: colors.link,\n            semibold: true,\n            size: sizes.linkSize,\n            marginRight: sizes.s,\n            children: t('common.more')\n          }), _jsx(Image, {\n            source: assets.arrow,\n            color: colors.link\n          })]\n        })\n      })]\n    })]\n  });\n};\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/components/Card.tsx"],"names":["React","Block","Image","Text","useTheme","useTranslation","useNavigation","Card","image","_id","title","type","linkLabel","imageInRow","t","assets","colors","sizes","navigation","isHorizontal","num","CARD_WIDTH","width","padding","sm","background","height","s","navigate","activityId","link","linkSize","arrow"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { TouchableOpacity } from 'react-native';\r\n\r\nimport Block from './Block';\r\nimport Image from './Image';\r\nimport Text from './Text';\r\nimport { ICard } from '../constants/types';\r\nimport { useTheme, useTranslation } from '../hooks';\r\nimport {useNavigation} from '@react-navigation/native';\r\n\r\n\r\nconst Card = ({ image, _id, title, type, linkLabel, imageInRow }: ICard) => {\r\n  const { t } = useTranslation();\r\n  const { assets, colors, sizes } = useTheme();\r\n  const navigation = useNavigation();\r\n\r\n  const isHorizontal = type !== 'vertical';\r\n  const num = imageInRow ? imageInRow : 2\r\n  const CARD_WIDTH = (sizes.width - sizes.padding * 2 - sizes.sm) / num;\r\n  return (\r\n    <Block\r\n      card\r\n      flex={0}\r\n      row={false}\r\n      marginBottom={sizes.sm}\r\n      width={CARD_WIDTH}>\r\n      <Image\r\n        resizeMode=\"cover\"\r\n        source={assets.background}\r\n        style={{\r\n          height: isHorizontal ? 114 : 110,\r\n          width: !isHorizontal ? '100%' : sizes.width / 2.435,\r\n        }}\r\n      />\r\n      <Block\r\n        paddingTop={sizes.s}\r\n        justify=\"space-between\"\r\n        paddingLeft={isHorizontal ? sizes.sm : 0}\r\n        paddingBottom={isHorizontal ? sizes.s : 0}>\r\n        <Text p marginBottom={sizes.s}>\r\n          {title}\r\n        </Text>\r\n        <TouchableOpacity onPress={() => {navigation.navigate('Activity', {activityId: _id})}}>\r\n          <Block row flex={0} align=\"center\">\r\n            <Text\r\n              p\r\n              color={colors.link}\r\n              semibold\r\n              size={sizes.linkSize}\r\n              marginRight={sizes.s}>\r\n              {t('common.more')}\r\n            </Text>\r\n            <Image source={assets.arrow} color={colors.link} />\r\n          </Block>\r\n        </TouchableOpacity>\r\n      </Block>\r\n    </Block>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}