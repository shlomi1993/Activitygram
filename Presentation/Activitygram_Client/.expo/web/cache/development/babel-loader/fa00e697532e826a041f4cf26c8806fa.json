{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"style\", \"color\", \"primary\", \"secondary\", \"tertiary\", \"black\", \"white\", \"gray\", \"danger\", \"warning\", \"success\", \"info\", \"search\", \"disabled\", \"label\", \"icon\", \"marginBottom\", \"marginTop\", \"marginHorizontal\", \"marginVertical\", \"marginRight\", \"marginLeft\", \"onFocus\", \"onBlur\", \"onChangeText\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Block from \"./Block\";\nimport Text from \"./Text\";\nimport useTheme from \"../hooks/useTheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Input = function Input(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? 'Input' : _ref$id,\n      style = _ref.style,\n      color = _ref.color,\n      primary = _ref.primary,\n      secondary = _ref.secondary,\n      tertiary = _ref.tertiary,\n      black = _ref.black,\n      white = _ref.white,\n      gray = _ref.gray,\n      danger = _ref.danger,\n      warning = _ref.warning,\n      success = _ref.success,\n      info = _ref.info,\n      search = _ref.search,\n      disabled = _ref.disabled,\n      label = _ref.label,\n      icon = _ref.icon,\n      marginBottom = _ref.marginBottom,\n      marginTop = _ref.marginTop,\n      marginHorizontal = _ref.marginHorizontal,\n      marginVertical = _ref.marginVertical,\n      marginRight = _ref.marginRight,\n      marginLeft = _ref.marginLeft,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      onChangeText = _ref.onChangeText,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      assets = _useTheme.assets,\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var handleFocus = useCallback(function (event, focus) {\n    setFocused(focus);\n    focus && (onFocus == null ? void 0 : onFocus(event));\n    !focus && (onBlur == null ? void 0 : onBlur(event));\n  }, [setFocused, onFocus, onBlur]);\n  var colorIndex = primary ? 'primary' : secondary ? 'secondary' : tertiary ? 'tertiary' : black ? 'black' : white ? 'white' : gray ? 'gray' : danger ? 'danger' : warning ? 'warning' : success ? 'success' : info ? 'info' : null;\n  var inputColor = color ? color : colorIndex ? colors == null ? void 0 : colors[colorIndex] : colors.gray;\n  var inputBoxStyles = StyleSheet.flatten([style, _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    minHeight: sizes.inputHeight\n  }, marginBottom && {\n    marginBottom: marginBottom\n  }), marginTop && {\n    marginTop: marginTop\n  }), marginHorizontal && {\n    marginHorizontal: marginHorizontal\n  }), marginVertical && {\n    marginVertical: marginVertical\n  }), marginRight && {\n    marginRight: marginRight\n  }), marginLeft && {\n    marginLeft: marginLeft\n  })]);\n  var inputContainerStyles = StyleSheet.flatten([{\n    minHeight: sizes.inputHeight,\n    borderRadius: sizes.inputRadius,\n    borderWidth: isFocused ? 2 : sizes.inputBorder,\n    borderColor: isFocused ? colors.focus : inputColor\n  }]);\n  var inputStyles = StyleSheet.flatten([{\n    flex: 1,\n    zIndex: 2,\n    height: '100%',\n    fontSize: sizes.p,\n    color: colors.input,\n    paddingHorizontal: sizes.inputPadding\n  }]);\n  var inputID = Platform.OS === 'android' ? {\n    accessibilityLabel: id\n  } : {\n    testID: id\n  };\n  return _jsxs(Block, {\n    flex: 0,\n    style: inputBoxStyles,\n    children: [label && _jsx(Text, {\n      bold: true,\n      marginBottom: sizes.s,\n      children: label\n    }), _jsxs(Block, {\n      row: true,\n      align: \"center\",\n      justify: \"flex-end\",\n      style: inputContainerStyles,\n      children: [search && assets.search && _jsx(Image, {\n        source: assets.search,\n        style: {\n          marginLeft: sizes.inputPadding,\n          tintColor: colors.icon\n        }\n      }), icon && _jsx(Image, {\n        source: assets == null ? void 0 : assets[icon],\n        style: {\n          marginLeft: sizes.inputPadding,\n          tintColor: colors.icon\n        }\n      }), _jsx(TextInput, _objectSpread(_objectSpread(_objectSpread({}, inputID), props), {}, {\n        style: inputStyles,\n        editable: !disabled,\n        placeholderTextColor: inputColor,\n        onFocus: function onFocus(event) {\n          return handleFocus(event, true);\n        },\n        onBlur: function onBlur(event) {\n          return handleFocus(event, false);\n        },\n        onChangeText: onChangeText\n      })), danger && assets.warning && _jsx(Image, {\n        source: assets.warning,\n        style: {\n          marginRight: sizes.s,\n          tintColor: colors.danger\n        }\n      }), success && assets.check && _jsx(Image, {\n        source: assets.check,\n        style: {\n          width: 12,\n          height: 9,\n          marginRight: sizes.s,\n          tintColor: colors.success\n        }\n      })]\n    })]\n  });\n};\n\nexport default React.memo(Input);","map":{"version":3,"sources":["C:/Users/shirz/Documents/GitHub/Activitygram/Presentation/Activitygram_Client/src/components/Input.tsx"],"names":["React","useCallback","useState","Block","Text","useTheme","Input","id","style","color","primary","secondary","tertiary","black","white","gray","danger","warning","success","info","search","disabled","label","icon","marginBottom","marginTop","marginHorizontal","marginVertical","marginRight","marginLeft","onFocus","onBlur","onChangeText","props","assets","colors","sizes","isFocused","setFocused","handleFocus","event","focus","colorIndex","inputColor","inputBoxStyles","StyleSheet","flatten","minHeight","inputHeight","inputContainerStyles","borderRadius","inputRadius","borderWidth","inputBorder","borderColor","inputStyles","flex","zIndex","height","fontSize","p","input","paddingHorizontal","inputPadding","inputID","Platform","OS","accessibilityLabel","testID","s","tintColor","check","width","memo"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;;;;;AAUA,OAAOC,KAAP;AACA,OAAOC,IAAP;AAEA,OAAOC,QAAP;;;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OA4BK;AAAA,qBA3BjBC,EA2BiB;AAAA,MA3BjBA,EA2BiB,wBA3BZ,OA2BY;AAAA,MA1BjBC,KA0BiB,QA1BjBA,KA0BiB;AAAA,MAzBjBC,KAyBiB,QAzBjBA,KAyBiB;AAAA,MAxBjBC,OAwBiB,QAxBjBA,OAwBiB;AAAA,MAvBjBC,SAuBiB,QAvBjBA,SAuBiB;AAAA,MAtBjBC,QAsBiB,QAtBjBA,QAsBiB;AAAA,MArBjBC,KAqBiB,QArBjBA,KAqBiB;AAAA,MApBjBC,KAoBiB,QApBjBA,KAoBiB;AAAA,MAnBjBC,IAmBiB,QAnBjBA,IAmBiB;AAAA,MAlBjBC,MAkBiB,QAlBjBA,MAkBiB;AAAA,MAjBjBC,OAiBiB,QAjBjBA,OAiBiB;AAAA,MAhBjBC,OAgBiB,QAhBjBA,OAgBiB;AAAA,MAfjBC,IAeiB,QAfjBA,IAeiB;AAAA,MAdjBC,MAciB,QAdjBA,MAciB;AAAA,MAbjBC,QAaiB,QAbjBA,QAaiB;AAAA,MAZjBC,KAYiB,QAZjBA,KAYiB;AAAA,MAXjBC,IAWiB,QAXjBA,IAWiB;AAAA,MAVjBC,YAUiB,QAVjBA,YAUiB;AAAA,MATjBC,SASiB,QATjBA,SASiB;AAAA,MARjBC,gBAQiB,QARjBA,gBAQiB;AAAA,MAPjBC,cAOiB,QAPjBA,cAOiB;AAAA,MANjBC,WAMiB,QANjBA,WAMiB;AAAA,MALjBC,UAKiB,QALjBA,UAKiB;AAAA,MAJjBC,OAIiB,QAJjBA,OAIiB;AAAA,MAHjBC,MAGiB,QAHjBA,MAGiB;AAAA,MAFjBC,YAEiB,QAFjBA,YAEiB;AAAA,MADdC,KACc;;AACjB,kBAAgC5B,QAAQ,EAAxC;AAAA,MAAO6B,MAAP,aAAOA,MAAP;AAAA,MAAeC,MAAf,aAAeA,MAAf;AAAA,MAAuBC,KAAvB,aAAuBA,KAAvB;;AACA,kBAAgClC,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOmC,SAAP;AAAA,MAAkBC,UAAlB;;AAEA,MAAMC,WAAW,GAAGtC,WAAW,CAC7B,UAACuC,KAAD,EAAQC,KAAR,EAAkB;AAChBH,IAAAA,UAAU,CAACG,KAAD,CAAV;AACAA,IAAAA,KAAK,KAAIX,OAAJ,oBAAIA,OAAO,CAAGU,KAAH,CAAX,CAAL;AACA,KAACC,KAAD,KAAUV,MAAV,oBAAUA,MAAM,CAAGS,KAAH,CAAhB;AACD,GAL4B,EAM7B,CAACF,UAAD,EAAaR,OAAb,EAAsBC,MAAtB,CAN6B,CAA/B;AASA,MAAMW,UAAU,GAAGhC,OAAO,GACtB,SADsB,GAEtBC,SAAS,GACT,WADS,GAETC,QAAQ,GACR,UADQ,GAERC,KAAK,GACL,OADK,GAELC,KAAK,GACL,OADK,GAELC,IAAI,GACJ,MADI,GAEJC,MAAM,GACN,QADM,GAENC,OAAO,GACP,SADO,GAEPC,OAAO,GACP,SADO,GAEPC,IAAI,GACJ,MADI,GAEJ,IApBJ;AAqBA,MAAMwB,UAAU,GAAGlC,KAAK,GACpBA,KADoB,GAEpBiC,UAAU,GACVP,MADU,oBACVA,MAAM,CAAGO,UAAH,CADI,GAEVP,MAAM,CAACpB,IAJX;AAMA,MAAM6B,cAAc,GAAGC,UAAU,CAACC,OAAX,CAAmB,CACxCtC,KADwC;AAGtCuC,IAAAA,SAAS,EAAEX,KAAK,CAACY;AAHqB,KAIlCxB,YAAY,IAAI;AAACA,IAAAA,YAAY,EAAEA;AAAf,GAJkB,GAKlCC,SAAS,IAAI;AAACA,IAAAA,SAAS,EAAEA;AAAZ,GALqB,GAMlCC,gBAAgB,IAAI;AAACA,IAAAA,gBAAgB,EAAEA;AAAnB,GANc,GAOlCC,cAAc,IAAI;AAACA,IAAAA,cAAc,EAAEA;AAAjB,GAPgB,GAQlCC,WAAW,IAAI;AAACA,IAAAA,WAAW,EAAEA;AAAd,GARmB,GASlCC,UAAU,IAAI;AAACA,IAAAA,UAAU,EAAEA;AAAb,GAToB,EAAnB,CAAvB;AAaA,MAAMoB,oBAAoB,GAAGJ,UAAU,CAACC,OAAX,CAAmB,CAC9C;AACEC,IAAAA,SAAS,EAAEX,KAAK,CAACY,WADnB;AAEEE,IAAAA,YAAY,EAAEd,KAAK,CAACe,WAFtB;AAGEC,IAAAA,WAAW,EAAEf,SAAS,GAAG,CAAH,GAAOD,KAAK,CAACiB,WAHrC;AAIEC,IAAAA,WAAW,EAAEjB,SAAS,GAAGF,MAAM,CAACM,KAAV,GAAkBE;AAJ1C,GAD8C,CAAnB,CAA7B;AASA,MAAMY,WAAW,GAAGV,UAAU,CAACC,OAAX,CAAmB,CACrC;AACEU,IAAAA,IAAI,EAAE,CADR;AAEEC,IAAAA,MAAM,EAAE,CAFV;AAGEC,IAAAA,MAAM,EAAE,MAHV;AAIEC,IAAAA,QAAQ,EAAEvB,KAAK,CAACwB,CAJlB;AAKEnD,IAAAA,KAAK,EAAE0B,MAAM,CAAC0B,KALhB;AAMEC,IAAAA,iBAAiB,EAAE1B,KAAK,CAAC2B;AAN3B,GADqC,CAAnB,CAApB;AAYA,MAAMC,OAAO,GACXC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B;AAACC,IAAAA,kBAAkB,EAAE5D;AAArB,GAA5B,GAAuD;AAAC6D,IAAAA,MAAM,EAAE7D;AAAT,GADzD;AAGA,SACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE,CAAb;AAAgB,IAAA,KAAK,EAAEqC,cAAvB;AAAA,eACGtB,KAAK,IACJ,KAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,YAAY,EAAEc,KAAK,CAACiC,CAA/B;AAAA,gBACG/C;AADH,MAFJ,EAME,MAAC,KAAD;AAAO,MAAA,GAAG,MAAV;AAAW,MAAA,KAAK,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAC,UAAlC;AAA6C,MAAA,KAAK,EAAE2B,oBAApD;AAAA,iBACG7B,MAAM,IAAIc,MAAM,CAACd,MAAjB,IACC,KAAC,KAAD;AACE,QAAA,MAAM,EAAEc,MAAM,CAACd,MADjB;AAEE,QAAA,KAAK,EAAE;AAACS,UAAAA,UAAU,EAAEO,KAAK,CAAC2B,YAAnB;AAAiCO,UAAAA,SAAS,EAAEnC,MAAM,CAACZ;AAAnD;AAFT,QAFJ,EAOGA,IAAI,IACH,KAAC,KAAD;AACE,QAAA,MAAM,EAAEW,MAAF,oBAAEA,MAAM,CAAGX,IAAH,CADhB;AAEE,QAAA,KAAK,EAAE;AAACM,UAAAA,UAAU,EAAEO,KAAK,CAAC2B,YAAnB;AAAiCO,UAAAA,SAAS,EAAEnC,MAAM,CAACZ;AAAnD;AAFT,QARJ,EAaE,KAAC,SAAD,gDACMyC,OADN,GAEM/B,KAFN;AAGE,QAAA,KAAK,EAAEsB,WAHT;AAIE,QAAA,QAAQ,EAAE,CAAClC,QAJb;AAKE,QAAA,oBAAoB,EAAEsB,UALxB;AAME,QAAA,OAAO,EAAE,iBAACH,KAAD;AAAA,iBAAWD,WAAW,CAACC,KAAD,EAAQ,IAAR,CAAtB;AAAA,SANX;AAOE,QAAA,MAAM,EAAE,gBAACA,KAAD;AAAA,iBAAWD,WAAW,CAACC,KAAD,EAAQ,KAAR,CAAtB;AAAA,SAPV;AAQE,QAAA,YAAY,EAAER;AARhB,SAbF,EAuBGhB,MAAM,IAAIkB,MAAM,CAACjB,OAAjB,IACC,KAAC,KAAD;AACE,QAAA,MAAM,EAAEiB,MAAM,CAACjB,OADjB;AAEE,QAAA,KAAK,EAAE;AACLW,UAAAA,WAAW,EAAEQ,KAAK,CAACiC,CADd;AAELC,UAAAA,SAAS,EAAEnC,MAAM,CAACnB;AAFb;AAFT,QAxBJ,EAgCGE,OAAO,IAAIgB,MAAM,CAACqC,KAAlB,IACC,KAAC,KAAD;AACE,QAAA,MAAM,EAAErC,MAAM,CAACqC,KADjB;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,EADF;AAELd,UAAAA,MAAM,EAAE,CAFH;AAGL9B,UAAAA,WAAW,EAAEQ,KAAK,CAACiC,CAHd;AAILC,UAAAA,SAAS,EAAEnC,MAAM,CAACjB;AAJb;AAFT,QAjCJ;AAAA,MANF;AAAA,IADF;AAqDD,CA9JD;;AAgKA,eAAelB,KAAK,CAACyE,IAAN,CAAWnE,KAAX,CAAf","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport {\r\n  Image,\r\n  TextInput,\r\n  TextStyle,\r\n  ViewStyle,\r\n  StyleSheet,\r\n  Platform,\r\n} from 'react-native';\r\n\r\nimport Block from './Block';\r\nimport Text from './Text';\r\n\r\nimport useTheme from '../hooks/useTheme';\r\nimport {IInputProps} from '../constants/types';\r\n\r\nconst Input = ({\r\n  id = 'Input',\r\n  style,\r\n  color,\r\n  primary,\r\n  secondary,\r\n  tertiary,\r\n  black,\r\n  white,\r\n  gray,\r\n  danger,\r\n  warning,\r\n  success,\r\n  info,\r\n  search,\r\n  disabled,\r\n  label,\r\n  icon,\r\n  marginBottom,\r\n  marginTop,\r\n  marginHorizontal,\r\n  marginVertical,\r\n  marginRight,\r\n  marginLeft,\r\n  onFocus,\r\n  onBlur,\r\n  onChangeText,\r\n  ...props\r\n}: IInputProps) => {\r\n  const {assets, colors, sizes} = useTheme();\r\n  const [isFocused, setFocused] = useState(false);\r\n\r\n  const handleFocus = useCallback(\r\n    (event, focus) => {\r\n      setFocused(focus);\r\n      focus && onFocus?.(event);\r\n      !focus && onBlur?.(event);\r\n    },\r\n    [setFocused, onFocus, onBlur],\r\n  );\r\n\r\n  const colorIndex = primary\r\n    ? 'primary'\r\n    : secondary\r\n    ? 'secondary'\r\n    : tertiary\r\n    ? 'tertiary'\r\n    : black\r\n    ? 'black'\r\n    : white\r\n    ? 'white'\r\n    : gray\r\n    ? 'gray'\r\n    : danger\r\n    ? 'danger'\r\n    : warning\r\n    ? 'warning'\r\n    : success\r\n    ? 'success'\r\n    : info\r\n    ? 'info'\r\n    : null;\r\n  const inputColor = color\r\n    ? color\r\n    : colorIndex\r\n    ? colors?.[colorIndex]\r\n    : colors.gray;\r\n\r\n  const inputBoxStyles = StyleSheet.flatten([\r\n    style,\r\n    {\r\n      minHeight: sizes.inputHeight,\r\n      ...(marginBottom && {marginBottom: marginBottom}),\r\n      ...(marginTop && {marginTop: marginTop}),\r\n      ...(marginHorizontal && {marginHorizontal: marginHorizontal}),\r\n      ...(marginVertical && {marginVertical: marginVertical}),\r\n      ...(marginRight && {marginRight: marginRight}),\r\n      ...(marginLeft && {marginLeft: marginLeft}),\r\n    },\r\n  ]) as ViewStyle;\r\n\r\n  const inputContainerStyles = StyleSheet.flatten([\r\n    {\r\n      minHeight: sizes.inputHeight,\r\n      borderRadius: sizes.inputRadius,\r\n      borderWidth: isFocused ? 2 : sizes.inputBorder,\r\n      borderColor: isFocused ? colors.focus : inputColor,\r\n    },\r\n  ]) as ViewStyle;\r\n\r\n  const inputStyles = StyleSheet.flatten([\r\n    {\r\n      flex: 1,\r\n      zIndex: 2,\r\n      height: '100%',\r\n      fontSize: sizes.p,\r\n      color: colors.input,\r\n      paddingHorizontal: sizes.inputPadding,\r\n    },\r\n  ]) as TextStyle;\r\n\r\n  // generate component testID or accessibilityLabel based on Platform.OS\r\n  const inputID =\r\n    Platform.OS === 'android' ? {accessibilityLabel: id} : {testID: id};\r\n\r\n  return (\r\n    <Block flex={0} style={inputBoxStyles}>\r\n      {label && (\r\n        <Text bold marginBottom={sizes.s}>\r\n          {label}\r\n        </Text>\r\n      )}\r\n      <Block row align=\"center\" justify=\"flex-end\" style={inputContainerStyles}>\r\n        {search && assets.search && (\r\n          <Image\r\n            source={assets.search}\r\n            style={{marginLeft: sizes.inputPadding, tintColor: colors.icon}}\r\n          />\r\n        )}\r\n        {icon && (\r\n          <Image\r\n            source={assets?.[icon]}\r\n            style={{marginLeft: sizes.inputPadding, tintColor: colors.icon}}\r\n          />\r\n        )}\r\n        <TextInput\r\n          {...inputID}\r\n          {...props}\r\n          style={inputStyles}\r\n          editable={!disabled}\r\n          placeholderTextColor={inputColor}\r\n          onFocus={(event) => handleFocus(event, true)}\r\n          onBlur={(event) => handleFocus(event, false)}\r\n          onChangeText={onChangeText}\r\n        />\r\n        {danger && assets.warning && (\r\n          <Image\r\n            source={assets.warning}\r\n            style={{\r\n              marginRight: sizes.s,\r\n              tintColor: colors.danger,\r\n            }}\r\n          />\r\n        )}\r\n        {success && assets.check && (\r\n          <Image\r\n            source={assets.check}\r\n            style={{\r\n              width: 12,\r\n              height: 9,\r\n              marginRight: sizes.s,\r\n              tintColor: colors.success,\r\n            }}\r\n          />\r\n        )}\r\n      </Block>\r\n    </Block>\r\n  );\r\n};\r\n\r\nexport default React.memo(Input);"]},"metadata":{},"sourceType":"module"}